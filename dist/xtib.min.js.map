{"version":3,"sources":["webpack:///webpack/bootstrap 02427fcb65101d86e15a","webpack:///./xtib/src/entities.ts","webpack:///./xtib/src/main.ts","webpack:///./xtib/src/inspector.ts","webpack:///./xtib/src/editor.ts","webpack:///./xtib/src/layer.ts"],"names":[],"mappings":"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","file":"xtib.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 02427fcb65101d86e15a","\nexport interface Inspectable {\n\n    name: string;\n    props: InspectorBaseProperty[];\n\n}\n\nexport class InspectorBaseProperty {\n\n    name: string;\n\n}\n\nexport class InspectorStringProperty extends InspectorBaseProperty {\n\n    defaultValue: string;\n    placeholder: string;\n    valueChanged: (value: string) => void;\n\n}\n\nexport class InspectorNumberProperty extends InspectorBaseProperty {\n\n    defaultValue: number;\n    placeholder: string;\n    minValue?: number;\n    maxValue?: number;\n    valueChanged: (value: number) => void;\n\n}\n\nexport class InspectorBooleanProperty extends InspectorBaseProperty {\n\n    defaultValue: boolean;\n    valueChanged: (value: boolean) => void;\n\n}\n\nexport class InspectorEnumProperty extends InspectorBaseProperty {\n\n    defaultValue: number;\n    enumOptions: { [key: number]: string }\n    valueChanged: (value: number) => void;\n\n}\n\nexport class InspectorFourNumberProperty extends InspectorBaseProperty {\n\n    fourNames: string[];\n    fourDefaultValue: number[];\n    valueChanged: (value: number[]) => void;\n\n}\n\nexport class InspectorHRProperty extends InspectorBaseProperty { }\n\nexport class BaseLayer {\n\n    name: string = \"\"\n    children: BaseLayer[] = []\n\n}\n\n\n// WEBPACK FOOTER //\n// ./xtib/src/entities.ts","/// <reference path=\"../../src/xt.d.ts\" />\n\nimport { Inspector } from './inspector'\nimport { Editor } from './editor';\nimport { Inspectable, InspectorBaseProperty, InspectorStringProperty, InspectorNumberProperty, InspectorBooleanProperty, InspectorEnumProperty, InspectorFourNumberProperty, InspectorHRProperty, BaseLayer } from './entities';\nimport { LayerView } from './layer';\n\nclass MockItem implements Inspectable {\n\n    name: string = \"View\";\n    props: InspectorBaseProperty[];\n\n    constructor() {\n        const fooProp = new InspectorStringProperty();\n        fooProp.name = \"Foo\";\n        fooProp.placeholder = \"Input Foo Value Here\";\n        fooProp.valueChanged = (value) => {\n            document.title = value\n        }\n        const barProp = new InspectorNumberProperty();\n        barProp.name = \"Bar\";\n        barProp.placeholder = \"Input Bar Value Here\";\n        barProp.valueChanged = (value) => {\n            document.title = value.toString()\n        }\n        const boolProp = new InspectorBooleanProperty();\n        boolProp.name = \"User Interaction Enabled\";\n        boolProp.valueChanged = (value) => {\n            document.title = value.toString()\n        }\n        const enumProp = new InspectorEnumProperty();\n        enumProp.name = \"Content Mode\";\n        enumProp.defaultValue = 1;\n        enumProp.enumOptions = {\n            0: \"Scale To Fill\",\n            1: \"Aspect Fit\",\n            2: \"Aspect Fill\",\n        }\n        enumProp.valueChanged = (value) => {\n            document.title = value.toString()\n        }\n        const insetsProp = new InspectorFourNumberProperty();\n        insetsProp.name = \"Content Insets\"\n        insetsProp.fourNames = [\"Left\", \"Top\", \"Bottom\", \"Right\"];\n        insetsProp.fourDefaultValue = [1, 2, 3, 4];\n        insetsProp.valueChanged = (value) => {\n            console.log(value)\n        }\n        this.props = [fooProp, new InspectorHRProperty(), barProp, boolProp, enumProp, insetsProp];\n    }\n\n}\n\nclass MockLayer extends BaseLayer {\n\n    constructor() {\n        super()\n        this.name = \"Root View\"\n        const child0 = new BaseLayer();\n        child0.name = \"Child 0 View\"\n        const child1 = new BaseLayer();\n        child1.name = \"Child 1 View\"\n        const child2 = new BaseLayer();\n        child2.name = \"Child 2 View\"\n        this.children = [\n            child0,\n            child1,\n            child2,\n        ]\n    }\n\n}\n\nclass XTIBAppDelegate extends XT.ApplicationDelegate {\n\n    inspectorView = new Inspector();\n    editorView = new Editor();\n    layerView = new LayerView();\n\n    applicationDidFinishLaunchingWithOptions() {\n        this.window = new XT.Window();\n        this.setupWindow();\n        this.window.makeKeyAndVisible();\n        this.mock();\n    }\n\n    setupWindow() {\n        if (this.window) {\n            this.window.backgroundColor = XT.Color.yellowColor;\n            this.window.addSubview(this.editorView);\n            this.window.addSubview(this.inspectorView);\n            this.window.addSubview(this.layerView);\n            this.window.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[editorView]-0-[inspectorView(300)]-0-|\", { editorView: this.editorView, inspectorView: this.inspectorView }));\n            this.window.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:[layerView(300)]-0-|\", { layerView: this.layerView }));\n            this.window.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[inspectorView]-[layerView(400)]-0-|\", { inspectorView: this.inspectorView, layerView: this.layerView }));\n            this.window.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[editorView]-0-|\", { editorView: this.editorView }));\n            this.window.layoutIfNeeded();\n        }\n    }\n\n    mock() {\n        this.inspectorView.item = new MockItem();\n        this.layerView.setLayerData(new MockLayer());\n    }\n\n}\n\nconst xtibApplication = new XT.Application(\"app\", new XTIBAppDelegate());\n\n\n// WEBPACK FOOTER //\n// ./xtib/src/main.ts","/// <reference path=\"../../src/xt.d.ts\" />\nimport { Inspectable, InspectorStringProperty, InspectorNumberProperty, InspectorBooleanProperty, InspectorEnumProperty, InspectorFourNumberProperty, InspectorHRProperty } from \"./entities\";\n\n\nexport class Inspector extends XT.View {\n\n    private sectionHeader: XT.View = new XT.View();\n    private sectionTitleLabel: XT.Label = new XT.Label();\n    private sectionContent: XT.ScrollView = new XT.ScrollView();\n\n    init() {\n        super.init();\n        this.userInteractionEnabled = true;\n        this.backgroundColor = new XT.Color(0x17 / 0xff, 0x17 / 0xff, 0x17 / 0xff, 0xff);\n        this.sectionTitleLabel.text = \"No Item\";\n        this.addBorder();\n        this.addSectionHeader();\n        this.addSectionContent();\n        this.resetContents();\n    }\n\n    private currentItem?: Inspectable = undefined\n\n    public get item(): Inspectable | undefined {\n        return this.currentItem;\n    }\n\n    public set item(value: Inspectable | undefined) {\n        if (this.currentItem === value) { return; }\n        this.currentItem = value;\n        this.resetContents();\n    }\n\n    private addBorder() {\n        const borderView = new XT.View();\n        borderView.backgroundColor = new XT.Color(0x32 / 0xff, 0x32 / 0xff, 0x32 / 0xff, 0xff);\n        this.addSubview(borderView);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[borderView(2)]\", { borderView }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[borderView]-0-|\", { borderView }));\n        this.layoutIfNeeded();\n    }\n\n    private addSectionHeader() {\n        this.sectionHeader.backgroundColor = new XT.Color(0x2a / 0xff, 0x2a / 0xff, 0x2a / 0xff, 0xff);\n        this.addSubview(this.sectionHeader);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[sectionHeader]-0-|\", { sectionHeader: this.sectionHeader }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[sectionHeader(32)]\", { sectionHeader: this.sectionHeader }));\n        this.sectionTitleLabel.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n        this.sectionTitleLabel.font = XT.Font.boldSystemFontOfSize(11);\n        this.sectionHeader.addSubview(this.sectionTitleLabel);\n        this.sectionTitleLabel.frame = XT.RectMake(8, 0, 300, 32);\n        this.layoutIfNeeded();\n    }\n\n    private addSectionContent() {\n        this.sectionContent.userInteractionEnabled = true;\n        this.addSubview(this.sectionContent);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[sectionContent]-0-|\", { sectionContent: this.sectionContent }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-32-[sectionContent]-0-|\", { sectionContent: this.sectionContent }));\n        this.layoutIfNeeded();\n    }\n\n    private resetContents() {\n        this.sectionTitleLabel.text = \"No Item\";\n        this.sectionContent.subviews.forEach(it => it.removeFromSuperview());\n        if (this.currentItem) {\n            this.sectionTitleLabel.text = this.currentItem.name;\n            let currentY = 0;\n            this.currentItem.props.forEach(prop => {\n                if (prop instanceof InspectorHRProperty) {\n                    const view = new XT.View(XT.RectMake(0, currentY, 300, 22));\n                    const line = new XT.View(XT.RectMake(8, 16, 300 - 16, 1));\n                    line.backgroundColor = new XT.Color(1, 1, 1, 0.15);\n                    view.addSubview(line);\n                    this.sectionContent.addSubview(view);\n                    currentY += 22;\n                    return\n                }\n                const view = new XT.View(XT.RectMake(0, currentY, 300, 64));\n                view.userInteractionEnabled = true;\n                const titleLabel = new XT.Label(XT.RectMake(8, 8, 300, 20))\n                titleLabel.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n                titleLabel.font = XT.Font.systemFontOfSize(11);\n                titleLabel.text = prop.name\n                const textField = new XT.TextField(XT.RectMake(8, 32, 300 - 16, 32))\n                textField.userInteractionEnabled = true;\n                textField.backgroundColor = new XT.Color(0x2e / 0xff, 0x2e / 0xff, 0x2e / 0xff, 0xff);\n                textField.font = XT.Font.systemFontOfSize(12);\n                textField.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n                if (prop instanceof InspectorStringProperty) {\n                    if (prop.defaultValue) {\n                        textField.text = prop.defaultValue\n                    }\n                    textField.placeholder = prop.placeholder\n                    textField.didEndEditing = () => {\n                        prop.valueChanged(textField.text || \"\")\n                    }\n                }\n                else if (prop instanceof InspectorNumberProperty) {\n                    if (prop.defaultValue) {\n                        textField.text = prop.defaultValue.toString()\n                    }\n                    textField.placeholder = prop.placeholder\n                    textField.didEndEditing = () => {\n                        if (textField.text && !isNaN(parseFloat(textField.text))) {\n                            prop.valueChanged(parseFloat(textField.text))\n                        }\n                    }\n                }\n                else if (prop instanceof InspectorBooleanProperty) {\n                    (textField as any).setOptions([\"TRUE\", \"FALSE\"], prop.defaultValue === true ? \"TRUE\" : \"FALSE\");\n                    textField.didEndEditing = () => {\n                        prop.valueChanged(textField.text === \"TRUE\")\n                    }\n                }\n                else if (prop instanceof InspectorEnumProperty) {\n                    (textField as any).setOptions(Object.keys(prop.enumOptions).map(it => prop.enumOptions[it]), prop.enumOptions[prop.defaultValue]);\n                    textField.didEndEditing = () => {\n                        Object.keys(prop.enumOptions).forEach(it => {\n                            if (prop.enumOptions[it] === textField.text) {\n                                prop.valueChanged(parseInt(it))\n                            }\n                        })\n                    }\n                }\n                else if (prop instanceof InspectorFourNumberProperty) {\n                    const textFields = [textField, new XT.TextField(), new XT.TextField(), new XT.TextField()];\n                    textFields[0].frame = XT.RectMake(8, 32, 88, 32);\n                    textFields[1].frame = XT.RectMake(88 + 20, 32, 88, 32);\n                    textFields[2].frame = XT.RectMake(8, 76, 88, 32);\n                    textFields[3].frame = XT.RectMake(88 + 20, 76, 88, 32);\n                    textFields.forEach((it, idx) => {\n                        it.userInteractionEnabled = true;\n                        it.backgroundColor = new XT.Color(0x2e / 0xff, 0x2e / 0xff, 0x2e / 0xff, 0xff);\n                        it.font = XT.Font.systemFontOfSize(12);\n                        it.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n                        it.placeholder = prop.fourNames[idx] || \"\";\n                        it.text = (prop.fourDefaultValue[idx] || 0.0).toString();\n                        it.shouldReturn = () => {\n                            it.blur()\n                            return true\n                        }\n                        it.didEndEditing = () => {\n                            prop.valueChanged(textFields.map(it =>\n                                !isNaN(parseFloat(it.text)) ? parseFloat(it.text) : 0\n                            ))\n                        }\n                        view.addSubview(it)\n                    })\n                    view.frame = XT.RectMake(0, currentY, 300, 108)\n                    currentY += 44;\n                }\n                textField.shouldReturn = () => {\n                    textField.blur()\n                    return true\n                }\n                view.addSubview(titleLabel);\n                if (textField.superview == undefined) {\n                    view.addSubview(textField)\n                }\n                this.sectionContent.addSubview(view);\n                currentY += 64;\n            })\n            this.sectionContent.contentSize = { width: 0, height: currentY };\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./xtib/src/inspector.ts","/// <reference path=\"../../src/xt.d.ts\" />\n\nexport class Editor extends XT.View {\n\n    init() {\n        super.init();\n        this.backgroundColor = new XT.Color(0x17 / 0xff, 0x17 / 0xff, 0x17 / 0xff, 0xff);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./xtib/src/editor.ts","/// <reference path=\"../../src/xt.d.ts\" />\n\nimport { BaseLayer } from \"./entities\";\n\nexport class LayerView extends XT.View {\n\n    private sectionHeader: XT.View = new XT.View();\n    private sectionTitleLabel: XT.Label = new XT.Label();\n    private sectionContent: XT.ScrollView = new XT.ScrollView();\n    private layerData: BaseLayer | undefined = undefined\n    private openedLayer: Set<BaseLayer> = new Set()\n    private currentLayer: BaseLayer | undefined = undefined\n\n    init() {\n        super.init();\n        this.userInteractionEnabled = true;\n        this.backgroundColor = new XT.Color(0x17 / 0xff, 0x17 / 0xff, 0x17 / 0xff, 0xff);\n        this.sectionTitleLabel.text = \"Layer\";\n        this.addBorder();\n        this.addSectionHeader();\n        this.addSectionContent();\n        this.addKeyEventListenner();\n    }\n\n    public setLayerData(layerData: BaseLayer | undefined) {\n        this.layerData = layerData;\n        this.resetContents();\n    }\n\n    private addKeyEventListenner() {\n        document.addEventListener(\"keypress\", (e) => {\n            if (e.keyCode === 43) {\n                console.log(\"require add layer\");\n            }\n        })\n        document.addEventListener(\"keydown\", (e) => {\n            console.log(e.keyCode);\n            \n        })\n    }\n\n    private addBorder() {\n        const borderView = new XT.View();\n        borderView.backgroundColor = new XT.Color(0x32 / 0xff, 0x32 / 0xff, 0x32 / 0xff, 0xff);\n        this.addSubview(borderView);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[borderView(2)]\", { borderView }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[borderView]-0-|\", { borderView }));\n        this.layoutIfNeeded();\n    }\n\n    private addSectionHeader() {\n        this.sectionHeader.backgroundColor = new XT.Color(0x2a / 0xff, 0x2a / 0xff, 0x2a / 0xff, 0xff);\n        this.addSubview(this.sectionHeader);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[sectionHeader]-0-|\", { sectionHeader: this.sectionHeader }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-0-[sectionHeader(32)]\", { sectionHeader: this.sectionHeader }));\n        this.sectionTitleLabel.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n        this.sectionTitleLabel.font = XT.Font.boldSystemFontOfSize(11);\n        this.sectionHeader.addSubview(this.sectionTitleLabel);\n        this.sectionTitleLabel.frame = XT.RectMake(8, 0, 300, 32);\n        this.layoutIfNeeded();\n    }\n\n    private addSectionContent() {\n        this.sectionContent.userInteractionEnabled = true;\n        this.addSubview(this.sectionContent);\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"H:|-0-[sectionContent]-0-|\", { sectionContent: this.sectionContent }));\n        this.addConstraints(XT.LayoutConstraint.constraintsWithVisualFormat(\"V:|-32-[sectionContent]-0-|\", { sectionContent: this.sectionContent }));\n        this.layoutIfNeeded();\n        this.sectionContent.onTap = () => {\n            this.currentLayer = undefined\n            this.resetContents();\n        }\n    }\n\n    private currentY = 0.0\n\n    private resetContents() {\n        this.currentY = 0.0;\n        this.sectionContent.subviews.forEach(it => it.removeFromSuperview())\n        if (this.layerData) {\n            this.renderLayer(this.layerData, 0);\n        }\n        this.sectionContent.contentSize = XT.SizeMake(0, this.currentY)\n    }\n\n    private renderLayer(layer: BaseLayer, currentLevel: number) {\n        const switchButton = new XT.Button(XT.RectMake(2 + currentLevel * 15, this.currentY - 2.5, 24, 28))\n        switchButton.color = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n        if (this.openedLayer.has(layer)) {\n            switchButton.font = XT.Font.systemFontOfSize(9);\n            switchButton.title = \"◢\";\n            switchButton.titleLabel.transform = new XT.TransformMatrix(0.60, 0.0, 0.0, 0.60, 4.0, 4.0)\n        }\n        else {\n            switchButton.font = XT.Font.systemFontOfSize(10);\n            switchButton.title = \"▷\";\n            switchButton.titleLabel.transform = new XT.TransformMatrix(0.75, 0.0, 0.0, 0.75, 3.0, 3.0)\n        }\n        switchButton.onTouchUpInside = () => {\n            if (this.openedLayer.has(layer)) {\n                this.openedLayer.delete(layer);\n            }\n            else {\n                this.openedLayer.add(layer);\n            }\n            this.resetContents();\n        }\n        if (layer.children === undefined || layer.children.length == 0) {\n            switchButton.alpha = 0.25\n            switchButton.userInteractionEnabled = false\n        }\n        const nameLabel = new XT.Label(XT.RectMake(12 + currentLevel * 15 + 16, this.currentY, 300, 28));\n        nameLabel.textColor = new XT.Color(0xc1 / 0xff, 0xc1 / 0xff, 0xc1 / 0xff, 0xff);\n        nameLabel.font = XT.Font.systemFontOfSize(10)\n        nameLabel.text = layer.name\n        nameLabel.userInteractionEnabled = true\n        nameLabel.onTap = () => {\n            this.currentLayer = layer;\n            this.resetContents();\n        }\n        if (this.currentLayer === layer) {\n            const selectedBackgroundView = new XT.View(XT.RectMake(0, this.currentY, 300, 28))\n            selectedBackgroundView.backgroundColor = new XT.Color(0x00, 0x36 / 0xff, 0x61 / 0xff, 0xff)\n            this.sectionContent.addSubview(selectedBackgroundView)\n        }\n        this.sectionContent.addSubview(switchButton);\n        this.sectionContent.addSubview(nameLabel);\n        this.currentY += 28.0;\n        if (this.openedLayer.has(layer)) {\n            layer.children.forEach(it => {\n                this.renderLayer(it, currentLevel + 1)\n            })\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./xtib/src/layer.ts"],"sourceRoot":""}