/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 244);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
function PointMake(x, y) {
    return { x: x, y: y };
}
exports.PointMake = PointMake;
function PointEqual(point1, point2) {
    return point1.x === point2.x && point1.y === point2.y;
}
exports.PointEqual = PointEqual;
exports.PointZero = PointMake(0, 0);
function SizeMake(width, height) {
    return { width: width, height: height };
}
exports.SizeMake = SizeMake;
function SizeEqual(size1, size2) {
    return size1.width === size2.width && size1.height === size2.height;
}
exports.SizeEqual = SizeEqual;
exports.SizeZero = SizeMake(0, 0);
function RectMake(x, y, width, height) {
    return { x: x, y: y, width: width, height: height };
}
exports.RectMake = RectMake;
exports.RectZero = RectMake(0, 0, 0, 0);
function RectEqual(rect1, rect2) {
    return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;
}
exports.RectEqual = RectEqual;
function RectInside(rect1, rect2) {
    return rect2.x > rect1.x && rect2.x + rect2.width < rect1.x + rect1.width && rect2.y > rect1.y && rect2.y + rect2.height < rect1.y + rect1.height;
}
exports.RectInside = RectInside;
function InsetsMake(top, left, bottom, right) {
    return { top: top, left: left, bottom: bottom, right: right };
}
exports.InsetsMake = InsetsMake;


/***/ }),

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(4);
var Rect_1 = __webpack_require__(0);
var Color_1 = __webpack_require__(6);
var TransformMatrix_1 = __webpack_require__(16);
var View = /** @class */ (function () {
    function View(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = this;
        if (_isChild) {
            return;
        }
        if (nativeObject) {
            this.nativeObject = nativeObject;
            window.XTRObjCreater.store(this);
        }
        else {
            this.nativeObject = XTRView.createScriptObject(rect || Rect_1.RectZero, this);
            window.XTRObjCreater.store(this);
            setImmediate(function () { _this.init(); });
        }
    }
    View.prototype.init = function () { };
    Object.defineProperty(View.prototype, "frame", {
        get: function () {
            return this.nativeObject.xtr_frame();
        },
        set: function (value) {
            this.nativeObject.xtr_setFrame(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "bounds", {
        get: function () {
            return this.nativeObject.xtr_bounds();
        },
        set: function (value) {
            this.nativeObject.xtr_setBounds(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "center", {
        get: function () {
            return this.nativeObject.xtr_center();
        },
        set: function (value) {
            this.nativeObject.xtr_setCenter(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "transform", {
        get: function () {
            var value = this.nativeObject.xtr_transform();
            if (value instanceof Object) {
                return new TransformMatrix_1.TransformMatrix(value.a, value.b, value.c, value.d, value.tx, value.ty);
            }
            return new TransformMatrix_1.TransformMatrix(1.0, 0.0, 0.0, 1.0, 0.0, 0.0);
        },
        set: function (value) {
            this.nativeObject.xtr_setTransform(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "clipsToBounds", {
        get: function () {
            return this.nativeObject.xtr_clipsToBounds();
        },
        set: function (value) {
            this.nativeObject.xtr_setClipsToBounds(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "backgroundColor", {
        get: function () {
            var value = this.nativeObject.xtr_backgroundColor();
            if (value instanceof Object) {
                return new Color_1.Color(value.r, value.g, value.b, value.a);
            }
            return undefined;
        },
        set: function (value) {
            this.nativeObject.xtr_setBackgroundColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "alpha", {
        get: function () {
            return this.nativeObject.xtr_alpha();
        },
        set: function (value) {
            this.nativeObject.xtr_setAlpha(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "opaque", {
        get: function () {
            return this.nativeObject.xtr_opaque();
        },
        set: function (value) {
            this.nativeObject.xtr_setOpaque(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "hidden", {
        get: function () {
            return this.nativeObject.xtr_hidden();
        },
        set: function (value) {
            this.nativeObject.xtr_setHidden(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "contentMode", {
        get: function () {
            return this.nativeObject.xtr_contentMode();
        },
        set: function (value) {
            this.nativeObject.xtr_setContentMode(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "maskView", {
        get: function () {
            return this.nativeObject.xtr_maskView();
        },
        set: function (value) {
            this.nativeObject.xtr_setMaskView(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "tintColor", {
        get: function () {
            var value = this.nativeObject.xtr_tintColor();
            if (value instanceof Object) {
                return new Color_1.Color(value.r, value.g, value.b, value.a);
            }
            return new Color_1.Color(0.0, 122.0 / 255.0, 1.0);
        },
        set: function (value) {
            this.nativeObject.xtr_setTintColor(value);
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.tintColorDidChange = function () { };
    View.prototype.setNeedsDisplay = function () { };
    Object.defineProperty(View.prototype, "cornerRadius", {
        get: function () {
            return this.nativeObject.xtr_cornerRadius();
        },
        set: function (value) {
            this.nativeObject.xtr_setCornerRadius(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "borderWidth", {
        get: function () {
            return this.nativeObject.xtr_borderWidth();
        },
        set: function (value) {
            this.nativeObject.xtr_setBorderWidth(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "borderColor", {
        get: function () {
            var value = this.nativeObject.xtr_borderColor();
            if (value instanceof Object) {
                return new Color_1.Color(value.r, value.g, value.b, value.a);
            }
            return undefined;
        },
        set: function (value) {
            this.nativeObject.xtr_setBorderColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "shadowColor", {
        get: function () {
            var value = this.nativeObject.xtr_shadowColor();
            if (value instanceof Object) {
                return new Color_1.Color(value.r, value.g, value.b, value.a);
            }
            return undefined;
        },
        set: function (value) {
            this.nativeObject.xtr_setShadowColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "shadowOpacity", {
        get: function () {
            return this.nativeObject.xtr_shadowOpacity();
        },
        set: function (value) {
            this.nativeObject.xtr_setShadowOpacity(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "shadowOffset", {
        get: function () {
            return this.nativeObject.xtr_shadowOffset();
        },
        set: function (value) {
            this.nativeObject.xtr_setShadowOffset(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "shadowRadius", {
        get: function () {
            return this.nativeObject.xtr_shadowRadius();
        },
        set: function (value) {
            this.nativeObject.xtr_setShadowRadius(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "tag", {
        get: function () {
            return this.nativeObject.xtr_tag();
        },
        set: function (value) {
            this.nativeObject.xtr_setTag(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "superview", {
        get: function () {
            return this.nativeObject.xtr_superview();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "subviews", {
        get: function () {
            return this.nativeObject.xtr_subviews();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.removeFromSuperview = function () {
        this.nativeObject.xtr_removeFromSuperview();
    };
    View.prototype.insertSubviewAtIndex = function (subview, atIndex) {
        this.nativeObject.xtr_insertSubviewAtIndexAtIndex(subview, atIndex);
    };
    View.prototype.exchangeSubviewAtIndex = function (index1, index2) {
        this.nativeObject.xtr_exchangeSubviewAtIndexIndex2(index1, index2);
    };
    View.prototype.addSubview = function (subview) {
        this.nativeObject.xtr_addSubview(subview);
    };
    View.prototype.insertSubviewBelow = function (subview, siblingSubview) {
        this.nativeObject.xtr_insertSubviewBelowSiblingSubview(subview, siblingSubview);
    };
    View.prototype.insertSubviewAbove = function (subview, siblingSubview) {
        this.nativeObject.xtr_insertSubviewAboveSiblingSubview(subview, siblingSubview);
    };
    View.prototype.bringSubviewToFront = function (subview) {
        this.nativeObject.xtr_bringSubviewToFront(subview);
    };
    View.prototype.sendSubviewToBack = function (subview) {
        this.nativeObject.xtr_sendSubviewToBack(subview);
    };
    View.prototype.didAddSubview = function (subview) { };
    View.prototype.willRemoveSubview = function (subview) { };
    View.prototype.willMoveToSuperview = function (newSuperview) { };
    View.prototype.didMoveToSuperview = function () { };
    View.prototype.willMoveToWindow = function (newWindow) { };
    View.prototype.didMoveToWindow = function () { };
    View.prototype.isDescendantOfView = function (view) {
        return this.nativeObject.xtr_isDescendantOfView(view);
    };
    View.prototype.viewWithTag = function (tag) {
        return this.nativeObject.xtr_viewWithTag(tag);
    };
    View.prototype.setNeedsLayout = function () { this.nativeObject.xtr_setNeedsLayout(); };
    View.prototype.layoutIfNeeded = function () { this.nativeObject.xtr_layoutIfNeeded(); };
    View.prototype.layoutSubviews = function () { };
    Object.defineProperty(View.prototype, "constraints", {
        // Mark: View LayoutConstraint
        get: function () {
            return this.nativeObject.xtr_constraints();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.addConstraint = function (constraint) {
        this.nativeObject.xtr_addConstraint(constraint);
    };
    View.prototype.addConstraints = function (constraints) {
        this.nativeObject.xtr_addConstraints(constraints);
    };
    View.prototype.removeConstraint = function (constraint) {
        this.nativeObject.xtr_removeConstraint();
    };
    View.prototype.removeAllConstraints = function () {
        this.nativeObject.xtr_removeAllConstraints();
    };
    Object.defineProperty(View.prototype, "userInteractionEnabled", {
        get: function () {
            return this.nativeObject.xtr_userInteractionEnabled();
        },
        set: function (value) {
            this.nativeObject.xtr_setUserInteractionEnabled(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "longPressDuration", {
        get: function () {
            return this.nativeObject.xtr_longPressDuration();
        },
        set: function (value) {
            this.nativeObject.xtr_setLongPressDuration(value);
            this.nativeObject.xtr_activeLongPress();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(View.prototype, "onTap", {
        get: function () {
            return this._onTap;
        },
        set: function (value) {
            this._onTap = value;
            this.nativeObject.xtr_activeTap();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.handleTap = function () {
        this.onTap && this.onTap();
    };
    Object.defineProperty(View.prototype, "onDoubleTap", {
        get: function () {
            return this._onDoubleTap;
        },
        set: function (value) {
            this._onDoubleTap = value;
            this.nativeObject.xtr_activeDoubleTap();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.handleDoubleTap = function () {
        this.onDoubleTap && this.onDoubleTap();
    };
    Object.defineProperty(View.prototype, "onLongPress", {
        get: function () {
            return this._onLongPress;
        },
        set: function (value) {
            this._onLongPress = value;
            this.nativeObject.xtr_activeLongPress();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.handleLongPress = function (state, viewLocation, absLocation) {
        if (state === 1) {
            this.onLongPress && this.onLongPress(View_1.InteractionState.Began, viewLocation, absLocation);
        }
        else if (state === 2) {
            this.onLongPress && this.onLongPress(View_1.InteractionState.Changed, viewLocation, absLocation);
        }
        else if (state === 3 || state === 4 || state === 5) {
            this.onLongPress && this.onLongPress(View_1.InteractionState.Ended, viewLocation, absLocation);
        }
    };
    Object.defineProperty(View.prototype, "onPan", {
        get: function () {
            return this._onPan;
        },
        set: function (value) {
            this._onPan = value;
            this.nativeObject.xtr_activePan();
        },
        enumerable: true,
        configurable: true
    });
    View.prototype.handlePan = function (state, viewLocation, absLocation) {
        if (state === 1) {
            this.onPan && this.onPan(View_1.InteractionState.Began, viewLocation, absLocation);
        }
        else if (state === 2) {
            this.onPan && this.onPan(View_1.InteractionState.Changed, viewLocation, absLocation);
        }
        else if (state === 3 || state === 4 || state === 5) {
            this.onPan && this.onPan(View_1.InteractionState.Ended, viewLocation, absLocation);
        }
    };
    // Mark: View Animation
    View.animationWithDuration = function (duration, animations, completion) {
        XTRView.xtr_animationWithDurationAnimationCompletion(duration, animations, completion);
    };
    View.animationWithBouncinessAndSpeed = function (damping, velocity, animations, completion) { };
    View.animationWithDurationDampingVelocity = function (duration, damping, velocity, animations, completion) {
        XTRView.xtr_animationWithBouncinessAndSpeedDampingVelocityAnimationCompletion(duration, damping, velocity, animations, completion);
    };
    // Mark: View Interactive
    View.InteractionState = View_1.InteractionState;
    View.SwipeDirection = View_1.SwipeDirection;
    return View;
}());
exports.View = View;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRViewConstructor]") {
        return new View(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 118:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
/// <reference path="xtr.d.ts" />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var TextAlignment;
(function (TextAlignment) {
    TextAlignment[TextAlignment["Left"] = 0] = "Left";
    TextAlignment[TextAlignment["Center"] = 1] = "Center";
    TextAlignment[TextAlignment["Right"] = 2] = "Right";
})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));
var TextVerticalAlignment;
(function (TextVerticalAlignment) {
    TextVerticalAlignment[TextVerticalAlignment["Top"] = 0] = "Top";
    TextVerticalAlignment[TextVerticalAlignment["Center"] = 1] = "Center";
    TextVerticalAlignment[TextVerticalAlignment["Bottom"] = 2] = "Bottom";
})(TextVerticalAlignment = exports.TextVerticalAlignment || (exports.TextVerticalAlignment = {}));
var LineBreakMode;
(function (LineBreakMode) {
    LineBreakMode[LineBreakMode["WordWrapping"] = 0] = "WordWrapping";
    LineBreakMode[LineBreakMode["TruncatingTail"] = 4] = "TruncatingTail";
})(LineBreakMode = exports.LineBreakMode || (exports.LineBreakMode = {}));
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRLabel.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(Label.prototype, "text", {
        get: function () {
            return this.nativeObject.xtr_text();
        },
        set: function (value) {
            this.nativeObject.xtr_setText(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "font", {
        get: function () {
            return this.nativeObject.xtr_font();
        },
        set: function (value) {
            this.nativeObject.xtr_setFont(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "textColor", {
        get: function () {
            return this.nativeObject.xtr_textColor();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "textAlignment", {
        get: function () {
            return this.nativeObject.xtr_textAlignment();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextAlignment(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "numberOfLines", {
        get: function () {
            return this.nativeObject.xtr_numberOfLines();
        },
        set: function (value) {
            this.nativeObject.xtr_setNumberOfLines(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "lineBreakMode", {
        get: function () {
            return this.nativeObject.xtr_lineBreakMode();
        },
        set: function (value) {
            this.nativeObject.xtr_setLineBreakMode(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Label.prototype, "lineSpace", {
        get: function () {
            return this.nativeObject.xtr_lineSpace();
        },
        set: function (value) {
            this.nativeObject.xtr_setLineSpace(value);
        },
        enumerable: true,
        configurable: true
    });
    Label.prototype.textRectForBounds = function (bounds) {
        return this.nativeObject.xtr_textRectForBounds(bounds);
    };
    return Label;
}(View_1.View));
exports.Label = Label;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRLabelConstructor]") {
        return new Label(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 119:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRScrollView.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(ScrollView.prototype, "isDirectionalLockEnabled", {
        get: function () {
            return this.nativeObject.xtr_isDirectionalLockEnabled();
        },
        set: function (value) {
            this.nativeObject.xtr_setDirectionalLockEnabled(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "bounces", {
        get: function () {
            return this.nativeObject.xtr_bounces();
        },
        set: function (value) {
            this.nativeObject.xtr_setBounces(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "isScrollEnabled", {
        get: function () {
            return this.nativeObject.xtr_isScrollEnabled();
        },
        set: function (value) {
            this.nativeObject.xtr_setScrollEnabled(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "showsHorizontalScrollIndicator", {
        get: function () {
            return this.nativeObject.xtr_showsHorizontalScrollIndicator();
        },
        set: function (value) {
            this.nativeObject.xtr_setShowsHorizontalScrollIndicator(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "showsVerticalScrollIndicator", {
        get: function () {
            return this.nativeObject.xtr_showsVerticalScrollIndicator();
        },
        set: function (value) {
            this.nativeObject.xtr_setShowsVerticalScrollIndicator(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "alwaysBounceVertical", {
        get: function () {
            return this.nativeObject.xtr_alwaysBounceVertical();
        },
        set: function (value) {
            this.nativeObject.xtr_setAlwaysBounceVertical(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ScrollView.prototype, "alwaysBounceHorizontal", {
        get: function () {
            return this.nativeObject.xtr_alwaysBounceHorizontal();
        },
        set: function (value) {
            this.nativeObject.xtr_setAlwaysBounceHorizontal(value);
        },
        enumerable: true,
        configurable: true
    });
    ScrollView.prototype.handleScroll = function () {
        this.onScroll && this.onScroll(this);
    };
    return ScrollView;
}(View_1.View));
exports.ScrollView = ScrollView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRScrollViewConstructor]") {
        return new ScrollView(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 120:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Color_1 = __webpack_require__(6);
var Device_1 = __webpack_require__(19);
var ViewController = /** @class */ (function () {
    function ViewController(nativeObject, isChild) {
        if (isChild === void 0) { isChild = false; }
        this.supportOrientations = [Device_1.DeviceOrientation.Portrait];
        if (isChild) {
            return;
        }
        if (nativeObject) {
            this.nativeObject = nativeObject;
            window.XTRObjCreater.store(this);
        }
        else {
            this.nativeObject = XTRViewController.create(this);
            window.XTRObjCreater.store(this);
        }
    }
    Object.defineProperty(ViewController.prototype, "view", {
        get: function () {
            return this.nativeObject.xtr_view();
        },
        set: function (value) {
            this.nativeObject.xtr_setView(value);
            this.viewRef = value;
        },
        enumerable: true,
        configurable: true
    });
    ViewController.prototype.loadView = function () {
        this.view = new View_1.View();
        this.view.backgroundColor = Color_1.Color.whiteColor;
        this.view.userInteractionEnabled = true;
    };
    ViewController.prototype.viewDidLoad = function () { };
    ViewController.prototype.viewWillAppear = function () { };
    ViewController.prototype.viewDidAppear = function () { };
    ViewController.prototype.viewWillDisappear = function () { };
    ViewController.prototype.viewDidDisappear = function () { };
    ViewController.prototype.viewWillLayoutSubviews = function () { };
    ViewController.prototype.viewDidLayoutSubviews = function () { };
    Object.defineProperty(ViewController.prototype, "parentViewController", {
        get: function () {
            return this.nativeObject.xtr_parentViewController();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ViewController.prototype, "childViewControllers", {
        get: function () {
            return this.nativeObject.xtr_childViewControllers();
        },
        enumerable: true,
        configurable: true
    });
    ViewController.prototype.addChildViewController = function (childController) {
        this.nativeObject.xtr_addChildViewController(childController);
    };
    ViewController.prototype.removeFromParentViewController = function () {
        this.nativeObject.xtr_removeFromParentViewController();
    };
    ViewController.prototype.willMoveToParentViewController = function (parent) { };
    ViewController.prototype.didMoveToParentViewController = function (parent) { };
    Object.defineProperty(ViewController.prototype, "navigationController", {
        get: function () {
            return this.nativeObject.xtr_navigationController();
        },
        enumerable: true,
        configurable: true
    });
    ViewController.prototype.keyboardWillShow = function (frame, duration) {
        this.childViewControllers.forEach(function (t) { return t.keyboardWillShow(frame, duration); });
    };
    ViewController.prototype.keyboardWillHide = function (duration) {
        this.childViewControllers.forEach(function (t) { return t.keyboardWillHide(duration); });
    };
    return ViewController;
}());
exports.ViewController = ViewController;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (target) {
    if (target.constructor.toString() === "[object XTRViewControllerConstructor]") {
        return new ViewController(target);
    }
    return undefined;
});


/***/ }),

/***/ 14:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(4);
var Color_1 = __webpack_require__(6);
var Rect_1 = __webpack_require__(0);
var TextAlignment;
(function (TextAlignment) {
    TextAlignment[TextAlignment["Left"] = 0] = "Left";
    TextAlignment[TextAlignment["Center"] = 1] = "Center";
    TextAlignment[TextAlignment["Right"] = 2] = "Right";
})(TextAlignment = exports.TextAlignment || (exports.TextAlignment = {}));
var TextVerticalAlignment;
(function (TextVerticalAlignment) {
    TextVerticalAlignment[TextVerticalAlignment["Top"] = 0] = "Top";
    TextVerticalAlignment[TextVerticalAlignment["Center"] = 1] = "Center";
    TextVerticalAlignment[TextVerticalAlignment["Bottom"] = 2] = "Bottom";
})(TextVerticalAlignment = exports.TextVerticalAlignment || (exports.TextVerticalAlignment = {}));
var LineBreakMode;
(function (LineBreakMode) {
    LineBreakMode[LineBreakMode["WordWrapping"] = 0] = "WordWrapping";
    LineBreakMode[LineBreakMode["TruncatingTail"] = 4] = "TruncatingTail";
})(LineBreakMode = exports.LineBreakMode || (exports.LineBreakMode = {}));
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.textColor = new Color_1.Color(0, 0, 0);
        _this.textAlignment = TextAlignment.Left;
        _this.numberOfLines = 1;
        _this.lineBreakMode = LineBreakMode.WordWrapping;
        _this.lineSpace = 12;
        return _this;
    }
    Label.prototype.textRectForBounds = function (bounds) { return Rect_1.RectZero; };
    return Label;
}(View_1.View));
exports.Label = Label;


/***/ }),

/***/ 16:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var TransformMatrixAlgorithm = /** @class */ (function () {
    function TransformMatrixAlgorithm() {
        this.props = [];
        this.props[0] = 1;
        this.props[1] = 0;
        this.props[2] = 0;
        this.props[3] = 0;
        this.props[4] = 0;
        this.props[5] = 1;
        this.props[6] = 0;
        this.props[7] = 0;
        this.props[8] = 0;
        this.props[9] = 0;
        this.props[10] = 1;
        this.props[11] = 0;
        this.props[12] = 0;
        this.props[13] = 0;
        this.props[14] = 0;
        this.props[15] = 1;
    }
    TransformMatrixAlgorithm.prototype.rotate = function (angle) {
        if (angle === 0) {
            return this;
        }
        var mCos = Math.cos(angle);
        var mSin = Math.sin(angle);
        return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
    };
    TransformMatrixAlgorithm.prototype.rotateX = function (angle) {
        if (angle === 0) {
            return this;
        }
        var mCos = Math.cos(angle);
        var mSin = Math.sin(angle);
        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);
    };
    TransformMatrixAlgorithm.prototype.rotateY = function (angle) {
        if (angle === 0) {
            return this;
        }
        var mCos = Math.cos(angle);
        var mSin = Math.sin(angle);
        return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);
    };
    TransformMatrixAlgorithm.prototype.rotateZ = function (angle) {
        if (angle === 0) {
            return this;
        }
        var mCos = Math.cos(angle);
        var mSin = Math.sin(angle);
        return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
    };
    TransformMatrixAlgorithm.prototype.shear = function (sx, sy) {
        return this._t(1, sy, sx, 1, 0, 0);
    };
    TransformMatrixAlgorithm.prototype.skew = function (ax, ay) {
        return this.shear(Math.tan(ax), Math.tan(ay));
    };
    TransformMatrixAlgorithm.prototype.skewFromAxis = function (ax, angle) {
        var mCos = Math.cos(angle);
        var mSin = Math.sin(angle);
        return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        this._t(1, 0, 0, 0, Math.tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);
    };
    TransformMatrixAlgorithm.prototype.scale = function (sx, sy, sz) {
        sz = isNaN(sz) ? 1 : sz;
        if (sx == 1 && sy == 1 && sz == 1) {
            return this;
        }
        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);
    };
    TransformMatrixAlgorithm.prototype.setTransform = function (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        this.props[0] = a;
        this.props[1] = b;
        this.props[2] = c;
        this.props[3] = d;
        this.props[4] = e;
        this.props[5] = f;
        this.props[6] = g;
        this.props[7] = h;
        this.props[8] = i;
        this.props[9] = j;
        this.props[10] = k;
        this.props[11] = l;
        this.props[12] = m;
        this.props[13] = n;
        this.props[14] = o;
        this.props[15] = p;
        return this;
    };
    TransformMatrixAlgorithm.prototype.translate = function (tx, ty, tz) {
        tz = isNaN(tz) ? 0 : tz;
        if (tx !== 0 || ty !== 0 || tz !== 0) {
            return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);
        }
        return this;
    };
    TransformMatrixAlgorithm.prototype._t = function (a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
        this.transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2);
    };
    TransformMatrixAlgorithm.prototype.transform = function (a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
        if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {
            if (m2 !== 0 || n2 !== 0 || o2 !== 0) {
                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2;
                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2;
                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2;
                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2;
            }
            return this;
        }
        var a1 = this.props[0];
        var b1 = this.props[1];
        var c1 = this.props[2];
        var d1 = this.props[3];
        var e1 = this.props[4];
        var f1 = this.props[5];
        var g1 = this.props[6];
        var h1 = this.props[7];
        var i1 = this.props[8];
        var j1 = this.props[9];
        var k1 = this.props[10];
        var l1 = this.props[11];
        var m1 = this.props[12];
        var n1 = this.props[13];
        var o1 = this.props[14];
        var p1 = this.props[15];
        /* matrix order (canvas compatible):
         * ace
         * bdf
         * 001
         */
        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;
        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;
        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;
        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;
        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;
        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;
        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;
        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;
        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;
        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;
        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;
        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;
        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;
        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;
        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;
        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;
        return this;
    };
    TransformMatrixAlgorithm.prototype.clone = function (matr) {
        var i;
        for (i = 0; i < 16; i += 1) {
            matr.props[i] = this.props[i];
        }
    };
    TransformMatrixAlgorithm.prototype.cloneFromProps = function (props) {
        var i;
        for (i = 0; i < 16; i += 1) {
            this.props[i] = props[i];
        }
    };
    TransformMatrixAlgorithm.prototype.applyToPoint = function (x, y, z) {
        return {
            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],
            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],
            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]
        };
        /*return {
         x: x * me.a + y * me.c + me.e,
         y: x * me.b + y * me.d + me.f
         };*/
    };
    TransformMatrixAlgorithm.prototype.applyToX = function (x, y, z) {
        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];
    };
    TransformMatrixAlgorithm.prototype.applyToY = function (x, y, z) {
        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];
    };
    TransformMatrixAlgorithm.prototype.applyToZ = function (x, y, z) {
        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];
    };
    TransformMatrixAlgorithm.prototype.applyToPointArray = function (x, y, z) {
        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12], x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13], x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];
    };
    TransformMatrixAlgorithm.prototype.applyToPointStringified = function (x, y) {
        return (Math.round(x * this.props[0] + y * this.props[4] + this.props[12])) + ',' + (Math.round(x * this.props[1] + y * this.props[5] + this.props[13]));
    };
    return TransformMatrixAlgorithm;
}());
var TransformMatrix = /** @class */ (function () {
    function TransformMatrix(a, b, c, d, tx, ty) {
        if (a === void 0) { a = 1.0; }
        if (b === void 0) { b = 0.0; }
        if (c === void 0) { c = 0.0; }
        if (d === void 0) { d = 1.0; }
        if (tx === void 0) { tx = 0.0; }
        if (ty === void 0) { ty = 0.0; }
        this.a = a;
        this.b = b;
        this.c = c;
        this.d = d;
        this.tx = tx;
        this.ty = ty;
    }
    TransformMatrix.unmatrix = function (matrix) {
        var A = matrix.a;
        var B = matrix.b;
        var C = matrix.c;
        var D = matrix.d;
        if (A * D == B * C) {
            return { scale: { x: 1.0, y: 1.0 }, degree: 0.0, translate: { x: 0.0, y: 0.0 } };
        }
        // step (3)
        var scaleX = Math.sqrt(A * A + B * B);
        A /= scaleX;
        B /= scaleX;
        // step (4)
        var skew = A * C + B * D;
        C -= A * skew;
        D -= B * skew;
        // step (5)
        var scaleY = Math.sqrt(C * C + D * D);
        C /= scaleY;
        D /= scaleY;
        skew /= scaleY;
        // step (6)
        if (A * D < B * C) {
            A = -A;
            B = -B;
            skew = -skew;
            scaleX = -scaleX;
        }
        return { scale: { x: scaleX, y: scaleY }, degree: Math.atan2(B, A) / (Math.PI / 180), translate: { x: matrix.tx, y: matrix.ty } };
    };
    TransformMatrix.postScale = function (matrix, x, y) {
        var obj = new TransformMatrixAlgorithm();
        var unMatrix = this.unmatrix(matrix);
        obj.rotate(-(unMatrix.degree * Math.PI / 180));
        obj.scale(unMatrix.scale.x, unMatrix.scale.y, 1.0);
        obj.translate(unMatrix.translate.x, unMatrix.translate.y, 0.0);
        obj.scale((x || 1.0), (y || 1.0), 1.0);
        return new TransformMatrix(obj.props[0], obj.props[1], obj.props[4], obj.props[5], obj.props[12], obj.props[13]);
    };
    TransformMatrix.postTranslate = function (matrix, x, y) {
        var obj = new TransformMatrixAlgorithm();
        var unMatrix = this.unmatrix(matrix);
        obj.rotate(-(unMatrix.degree * Math.PI / 180));
        obj.scale(unMatrix.scale.x, unMatrix.scale.y, 1.0);
        obj.translate(unMatrix.translate.x, unMatrix.translate.y, 0.0);
        obj.translate((x || 0.0), (y || 0.0), 0.0);
        return new TransformMatrix(obj.props[0], obj.props[1], obj.props[4], obj.props[5], obj.props[12], obj.props[13]);
    };
    TransformMatrix.postRotate = function (matrix, angle) {
        var obj = new TransformMatrixAlgorithm();
        var unMatrix = this.unmatrix(matrix);
        obj.rotate(-(unMatrix.degree * Math.PI / 180));
        obj.scale(unMatrix.scale.x, unMatrix.scale.y, 1.0);
        obj.translate(unMatrix.translate.x, unMatrix.translate.y, 0.0);
        obj.rotate(-angle);
        return new TransformMatrix(obj.props[0], obj.props[1], obj.props[4], obj.props[5], obj.props[12], obj.props[13]);
    };
    TransformMatrix.concat = function (preMatrix, postMatrix) {
        var obj = new TransformMatrixAlgorithm();
        obj.props[0] = preMatrix.a;
        obj.props[1] = preMatrix.b;
        obj.props[4] = preMatrix.c;
        obj.props[5] = preMatrix.d;
        obj.props[12] = preMatrix.tx;
        obj.props[13] = preMatrix.ty;
        obj.transform(postMatrix.a, postMatrix.b, 0, 0, postMatrix.c, postMatrix.d, 0, 0, 0, 0, 1, 0, postMatrix.tx, postMatrix.ty, 0, 1);
        return new TransformMatrix(obj.props[0], obj.props[1], obj.props[4], obj.props[5], obj.props[12], obj.props[13]);
    };
    return TransformMatrix;
}());
exports.TransformMatrix = TransformMatrix;


/***/ }),

/***/ 18:
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1,eval)("this");
} catch(e) {
	// This works if the window reference is available
	if(typeof window === "object")
		g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 19:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DeviceOrientation;
(function (DeviceOrientation) {
    DeviceOrientation[DeviceOrientation["Unknown"] = 0] = "Unknown";
    DeviceOrientation[DeviceOrientation["Portrait"] = 1] = "Portrait";
    DeviceOrientation[DeviceOrientation["PortraitUpsideDown"] = 2] = "PortraitUpsideDown";
    DeviceOrientation[DeviceOrientation["LandscapeLeft"] = 3] = "LandscapeLeft";
    DeviceOrientation[DeviceOrientation["LandscapeRight"] = 4] = "LandscapeRight";
    DeviceOrientation[DeviceOrientation["FaceUp"] = 5] = "FaceUp";
    DeviceOrientation[DeviceOrientation["FaceDown"] = 6] = "FaceDown";
})(DeviceOrientation = exports.DeviceOrientation || (exports.DeviceOrientation = {}));
var Device = /** @class */ (function () {
    function Device() {
    }
    Device.prototype.isiOS = function () { return false; };
    Device.prototype.isAndroid = function () { return false; };
    Device.prototype.isWeb = function () { return false; };
    return Device;
}());
exports.Device = Device;


/***/ }),

/***/ 22:
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ 23:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LayoutAttribute;
(function (LayoutAttribute) {
    LayoutAttribute[LayoutAttribute["Const"] = 0] = "Const";
    LayoutAttribute[LayoutAttribute["Left"] = 1] = "Left";
    LayoutAttribute[LayoutAttribute["Right"] = 2] = "Right";
    LayoutAttribute[LayoutAttribute["Top"] = 3] = "Top";
    LayoutAttribute[LayoutAttribute["Bottom"] = 4] = "Bottom";
    LayoutAttribute[LayoutAttribute["Width"] = 7] = "Width";
    LayoutAttribute[LayoutAttribute["Height"] = 8] = "Height";
    LayoutAttribute[LayoutAttribute["CenterX"] = 9] = "CenterX";
    LayoutAttribute[LayoutAttribute["CenterY"] = 10] = "CenterY";
})(LayoutAttribute = exports.LayoutAttribute || (exports.LayoutAttribute = {}));
var LayoutRelation;
(function (LayoutRelation) {
    LayoutRelation[LayoutRelation["Less"] = -1] = "Less";
    LayoutRelation[LayoutRelation["Equal"] = 0] = "Equal";
    LayoutRelation[LayoutRelation["Greater"] = 1] = "Greater";
})(LayoutRelation = exports.LayoutRelation || (exports.LayoutRelation = {}));
var LayoutConstraint = /** @class */ (function () {
    function LayoutConstraint(firstItem, firstAttr, relation, secondItem, secondAttr, constant, multiplier) {
        if (constant === void 0) { constant = 0; }
        if (multiplier === void 0) { multiplier = 1; }
        this.relation = LayoutRelation.Equal;
        this.constant = 0;
        this.multiplier = 1;
        this.priority = 750;
        this.firstItem = firstItem;
        this.firstAttr = firstAttr;
        this.relation = relation || LayoutRelation.Equal;
        this.secondItem = secondItem;
        this.secondAttr = secondAttr;
        this.constant = constant;
        this.multiplier = multiplier;
    }
    LayoutConstraint.constraintsWithVisualFormat = function (format, views) { return []; };
    LayoutConstraint.LayoutAttribute = LayoutAttribute;
    LayoutConstraint.LayoutRelation = LayoutRelation;
    return LayoutConstraint;
}());
exports.LayoutConstraint = LayoutConstraint;


/***/ }),

/***/ 24:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ScrollView_1 = __webpack_require__(37);
var View_1 = __webpack_require__(4);
var ListSelectionStyle;
(function (ListSelectionStyle) {
    ListSelectionStyle[ListSelectionStyle["None"] = 0] = "None";
    ListSelectionStyle[ListSelectionStyle["Gray"] = 1] = "Gray";
})(ListSelectionStyle = exports.ListSelectionStyle || (exports.ListSelectionStyle = {}));
var ListCell = /** @class */ (function (_super) {
    __extends(ListCell, _super);
    function ListCell() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectionStyle = ListSelectionStyle.Gray;
        return _this;
    }
    ListCell.prototype.didSelected = function () { };
    ListCell.prototype.didRender = function () { };
    return ListCell;
}(View_1.View));
exports.ListCell = ListCell;
var ListView = /** @class */ (function (_super) {
    __extends(ListView, _super);
    function ListView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ListView.prototype.register = function (clazz, reuseIdentifier) { };
    ListView.prototype.reloadData = function () { };
    return ListView;
}(ScrollView_1.ScrollView));
exports.ListView = ListView;


/***/ }),

/***/ 244:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var main_ios_1 = __webpack_require__(245);
var AppDelegate = /** @class */ (function (_super) {
    __extends(AppDelegate, _super);
    function AppDelegate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    AppDelegate.prototype.applicationDidFinishLaunchingWithOptions = function () {
        this.window = new main_ios_1.Window();
        this.window.rootViewController = new main_ios_1.NavigationController(new FirstViewController());
        this.window.makeKeyAndVisible();
    };
    return AppDelegate;
}(main_ios_1.ApplicationDelegate));
var FirstViewController = /** @class */ (function (_super) {
    __extends(FirstViewController, _super);
    function FirstViewController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirstViewController.prototype.viewDidLoad = function () {
        this.supportOrientations = [main_ios_1.DeviceOrientation.Portrait, main_ios_1.DeviceOrientation.LandscapeLeft, main_ios_1.DeviceOrientation.LandscapeRight];
        var redView = new main_ios_1.View(main_ios_1.RectMake(44, 44, 44, 44));
        redView.backgroundColor = main_ios_1.Color.redColor;
        this.view.addSubview(redView);
        setTimeout(function () {
            main_ios_1.View.animationWithDuration(0.25, function () {
                // redView.transform = TransformMatrix.scale(redView.transform, 2.0, 2.0)
                redView.transform = main_ios_1.TransformMatrix.postTranslate(main_ios_1.TransformMatrix.postRotate(new main_ios_1.TransformMatrix(), 45 * Math.PI / 180), 100, 100);
                // redView.transform = TransformMatrix.postRotate(redView.transform, 45 * Math.PI / 180)
                // redView.transform = TransformMatrix.concat(redView.transform, new TransformMatrix(2.0, 0.0, 0.0, 2.0, 20.0, 20.0))
                // redView.transform = new TransformMatrix(2.0, 0.0, 0.0, 2.0, 80.0, 80.0)
            });
        }, 2000);
        redView.userInteractionEnabled = true;
        redView.onTap = function () {
            redView.backgroundColor = main_ios_1.Color.yellowColor;
        };
    };
    FirstViewController.prototype.testPlugin = function () {
        if (FOOPlugin) {
            console.log(FOOPlugin.sayHello());
        }
    };
    return FirstViewController;
}(main_ios_1.ViewController));
var application = new main_ios_1.Application('app', new AppDelegate());


/***/ }),

/***/ 245:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Application_1 = __webpack_require__(246);
var ApplicationDelegate = /** @class */ (function (_super) {
    __extends(ApplicationDelegate, _super);
    function ApplicationDelegate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ApplicationDelegate;
}(Application_1.ApplicationDelegate));
exports.ApplicationDelegate = ApplicationDelegate;
var Application = /** @class */ (function (_super) {
    __extends(Application, _super);
    function Application() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Application;
}(Application_1.Application));
exports.Application = Application;
var Button_1 = __webpack_require__(247);
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Button;
}(Button_1.Button));
exports.Button = Button;
var Color_1 = __webpack_require__(6);
var Color = /** @class */ (function (_super) {
    __extends(Color, _super);
    function Color() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Color;
}(Color_1.Color));
exports.Color = Color;
var Font_1 = __webpack_require__(248);
var Font = /** @class */ (function (_super) {
    __extends(Font, _super);
    function Font() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Font;
}(Font_1.Font));
exports.Font = Font;
var ImageView_1 = __webpack_require__(27);
var ImageView_2 = __webpack_require__(249);
exports.ImageRenderingMode = ImageView_1.ImageRenderingMode;
var Image = /** @class */ (function (_super) {
    __extends(Image, _super);
    function Image() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Image;
}(ImageView_2.Image));
exports.Image = Image;
exports.ContentMode = ImageView_1.ContentMode;
var ImageView = /** @class */ (function (_super) {
    __extends(ImageView, _super);
    function ImageView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ImageView;
}(ImageView_2.ImageView));
exports.ImageView = ImageView;
var Label_1 = __webpack_require__(14);
var Label_2 = __webpack_require__(118);
exports.TextAlignment = Label_1.TextAlignment;
exports.TextVerticalAlignment = Label_1.TextVerticalAlignment;
exports.LineBreakMode = Label_1.LineBreakMode;
var Label = /** @class */ (function (_super) {
    __extends(Label, _super);
    function Label() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Label;
}(Label_2.Label));
exports.Label = Label;
var LayoutConstraint_1 = __webpack_require__(23);
var LayoutConstraint_2 = __webpack_require__(250);
exports.LayoutAttribute = LayoutConstraint_1.LayoutAttribute;
exports.LayoutRelation = LayoutConstraint_1.LayoutRelation;
var LayoutConstraint = /** @class */ (function (_super) {
    __extends(LayoutConstraint, _super);
    function LayoutConstraint() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return LayoutConstraint;
}(LayoutConstraint_2.LayoutConstraint));
exports.LayoutConstraint = LayoutConstraint;
var ListView_1 = __webpack_require__(24);
var ListView_2 = __webpack_require__(251);
exports.ListSelectionStyle = ListView_1.ListSelectionStyle;
var ListCell = /** @class */ (function (_super) {
    __extends(ListCell, _super);
    function ListCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ListCell;
}(ListView_2.ListCell));
exports.ListCell = ListCell;
var ListView = /** @class */ (function (_super) {
    __extends(ListView, _super);
    function ListView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ListView;
}(ListView_2.ListView));
exports.ListView = ListView;
var Rect_1 = __webpack_require__(0);
exports.PointMake = Rect_1.PointMake;
exports.PointEqual = Rect_1.PointEqual;
exports.PointZero = Rect_1.PointZero;
exports.SizeMake = Rect_1.SizeMake;
exports.SizeEqual = Rect_1.SizeEqual;
exports.SizeZero = Rect_1.SizeZero;
exports.RectMake = Rect_1.RectMake;
exports.RectZero = Rect_1.RectZero;
exports.RectEqual = Rect_1.RectEqual;
exports.RectInside = Rect_1.RectInside;
var Screen_1 = __webpack_require__(252);
var Screen = /** @class */ (function (_super) {
    __extends(Screen, _super);
    function Screen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Screen;
}(Screen_1.Screen));
exports.Screen = Screen;
var ScrollView_1 = __webpack_require__(119);
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ScrollView;
}(ScrollView_1.ScrollView));
exports.ScrollView = ScrollView;
var TransformMatrix_1 = __webpack_require__(16);
var TransformMatrix = /** @class */ (function (_super) {
    __extends(TransformMatrix, _super);
    function TransformMatrix() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TransformMatrix;
}(TransformMatrix_1.TransformMatrix));
exports.TransformMatrix = TransformMatrix;
var View_1 = __webpack_require__(4);
var View_2 = __webpack_require__(11);
var View = /** @class */ (function (_super) {
    __extends(View, _super);
    function View() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return View;
}(View_2.View));
exports.View = View;
exports.InteractionState = View_1.InteractionState;
exports.SwipeDirection = View_1.SwipeDirection;
var Window_1 = __webpack_require__(253);
var Window = /** @class */ (function (_super) {
    __extends(Window, _super);
    function Window() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Window;
}(Window_1.Window));
exports.Window = Window;
var ViewController_1 = __webpack_require__(120);
var ViewController = /** @class */ (function (_super) {
    __extends(ViewController, _super);
    function ViewController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return ViewController;
}(ViewController_1.ViewController));
exports.ViewController = ViewController;
var NavigationController_1 = __webpack_require__(254);
var NavigationController = /** @class */ (function (_super) {
    __extends(NavigationController, _super);
    function NavigationController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return NavigationController;
}(NavigationController_1.NavigationController));
exports.NavigationController = NavigationController;
var TextField_1 = __webpack_require__(61);
var TextField_2 = __webpack_require__(255);
var TextField = /** @class */ (function (_super) {
    __extends(TextField, _super);
    function TextField() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextField;
}(TextField_2.TextField));
exports.TextField = TextField;
exports.TextFieldViewMode = TextField_1.TextFieldViewMode;
exports.ReturnKeyType = TextField_1.ReturnKeyType;
exports.KeyboardType = TextField_1.KeyboardType;
var TextView_1 = __webpack_require__(256);
var TextView = /** @class */ (function (_super) {
    __extends(TextView, _super);
    function TextView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return TextView;
}(TextView_1.TextView));
exports.TextView = TextView;
var CanvasView_1 = __webpack_require__(257);
var CanvasView = /** @class */ (function (_super) {
    __extends(CanvasView, _super);
    function CanvasView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CanvasView;
}(CanvasView_1.CanvasView));
exports.CanvasView = CanvasView;
var CustomView_1 = __webpack_require__(258);
var CustomView = /** @class */ (function (_super) {
    __extends(CustomView, _super);
    function CustomView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return CustomView;
}(CustomView_1.CustomView));
exports.CustomView = CustomView;
var Device_1 = __webpack_require__(19);
var Device_2 = __webpack_require__(259);
exports.DeviceOrientation = Device_1.DeviceOrientation;
var Device = /** @class */ (function (_super) {
    __extends(Device, _super);
    function Device() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return Device;
}(Device_2.Device));
exports.Device = Device;


/***/ }),

/***/ 246:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var sharedApplication = undefined;
var ApplicationDelegate = /** @class */ (function () {
    function ApplicationDelegate() {
    }
    ApplicationDelegate.prototype.resetNativeObject = function (nativeObject) {
        this.nativeObject = nativeObject;
    };
    Object.defineProperty(ApplicationDelegate.prototype, "window", {
        get: function () {
            return this.nativeObject.xtr_window();
        },
        set: function (value) {
            this.nativeObject.xtr_setWindow(value);
            this.windowRef = value;
        },
        enumerable: true,
        configurable: true
    });
    ApplicationDelegate.prototype.applicationDidFinishLaunchingWithOptions = function (application, launchOptions) { };
    return ApplicationDelegate;
}());
exports.ApplicationDelegate = ApplicationDelegate;
var Application = /** @class */ (function () {
    function Application(t, delegate) {
        if (sharedApplication === undefined) {
            sharedApplication = this;
        }
        this.nativeObject = XTRApplication.create(this);
        XTRApplicationDelegate.attachDelegate(delegate);
        this.delegate = delegate;
    }
    Object.defineProperty(Application.prototype, "keyWindow", {
        get: function () {
            return this.nativeObject.xtr_keyWindow;
        },
        enumerable: true,
        configurable: true
    });
    Application.sharedApplication = function () {
        return sharedApplication;
    };
    return Application;
}());
exports.Application = Application;
if (window.XTRObjCreater === undefined) {
    window.XTRObjCreater = {
        create: function (view) {
            if (this.objectStore[view.objectUUID] !== undefined) {
                return this.objectStore[view.objectUUID];
            }
            for (var index = 0; index < window.XTRObjClasses.length; index++) {
                var element = window.XTRObjClasses[index];
                var instance = element(view);
                if (instance !== undefined) {
                    this.store(instance);
                    return instance;
                }
            }
            return view;
        },
        store: function (target) {
            if (target.nativeObject instanceof Object && typeof target.nativeObject.objectUUID === "string") {
                this.objectStore[target.nativeObject.objectUUID] = target;
            }
        },
        objectStore: {},
    };
}
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}


/***/ }),

/***/ 247:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Label_1 = __webpack_require__(118);
var Rect_1 = __webpack_require__(0);
var Button = /** @class */ (function (_super) {
    __extends(Button, _super);
    function Button(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRButton.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(Button.prototype, "title", {
        get: function () {
            return this.nativeObject.xtr_title();
        },
        set: function (value) {
            this.nativeObject.xtr_setTitle(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "font", {
        get: function () {
            return this.nativeObject.xtr_font();
        },
        set: function (value) {
            this.nativeObject.xtr_setFont(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "image", {
        get: function () {
            return this.nativeObject.xtr_image();
        },
        set: function (value) {
            this.nativeObject.xtr_setImage(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "color", {
        get: function () {
            return this.nativeObject.xtr_color();
        },
        set: function (value) {
            this.nativeObject.xtr_setColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "vertical", {
        get: function () {
            return this.nativeObject.xtr_vertical();
        },
        set: function (value) {
            this.nativeObject.xtr_setVertical(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Button.prototype, "inset", {
        get: function () {
            return this.nativeObject.xtr_inset();
        },
        set: function (value) {
            this.nativeObject.xtr_setInset(value);
        },
        enumerable: true,
        configurable: true
    });
    Button.prototype.handleTouchUpInside = function () {
        this.onTouchUpInside && this.onTouchUpInside();
    };
    Button.prototype.handleHighlighted = function (highligted) {
        this.onHighlighted && this.onHighlighted(highligted);
    };
    return Button;
}(View_1.View));
exports.Button = Button;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRButtonConstructor]") {
        return new Label_1.Label(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 248:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/// <reference path="xtr.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
var Font = /** @class */ (function () {
    function Font(pointSize, fontWeight, fontStyle, familyName, nativeObject) {
        if (fontWeight === void 0) { fontWeight = '400'; }
        if (fontStyle === void 0) { fontStyle = 'normal'; }
        if (nativeObject) {
            this.nativeObject = nativeObject;
        }
        else {
            this.nativeObject = XTRFont.createFontWeightFontStyleFamilyName(pointSize, fontWeight, fontStyle, familyName || "");
        }
    }
    Font.systemFontOfSize = function (pointSize, weight) {
        if (weight === void 0) { weight = '400'; }
        return new Font(pointSize, weight);
    };
    Font.boldSystemFontOfSize = function (pointSize) {
        return new Font(pointSize, '700');
    };
    Font.italicSystemFontOfSize = function (pointSize) {
        return new Font(pointSize, '400', 'italic');
    };
    Object.defineProperty(Font.prototype, "familyName", {
        get: function () {
            return this.nativeObject.xtr_familyName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Font.prototype, "pointSize", {
        get: function () {
            return this.nativeObject.xtr_pointSize();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Font.prototype, "fontWeight", {
        get: function () {
            return this.nativeObject.xtr_fontWeight();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Font.prototype, "fontStyle", {
        get: function () {
            return this.nativeObject.xtr_fontStyle();
        },
        enumerable: true,
        configurable: true
    });
    return Font;
}());
exports.Font = Font;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRFontConstructor]") {
        return new Font(0, undefined, undefined, undefined, view);
    }
    return undefined;
});


/***/ }),

/***/ 249:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
/// <reference path="xtr.d.ts" />
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var Image = /** @class */ (function () {
    function Image(nativeObject) {
        this.nativeObject = nativeObject;
    }
    Image.fromURL = function (url, success, failure) {
        XTRImage.xtr_fromURLSuccessFailure(url, success, function (message) {
            failure && failure(new Error(message));
        });
    };
    Image.fromAssets = function (named, success, failure) {
        XTRImage.xtr_fromAssetsPathScalesSuccessFailure(named, this.assetsPath, [], success, function (message) {
            failure && failure(new Error(message));
        });
    };
    Image.fromAssetsWithScales = function (named, scales, success, failure) {
        XTRImage.xtr_fromAssetsPathScalesSuccessFailure(named, this.assetsPath, scales, success, function (message) {
            failure && failure(new Error(message));
        });
    };
    Image.fromBase64 = function (value, scale, success) {
        XTRImage.xtr_fromBase64ScaleSuccess(value, scale, success);
    };
    Object.defineProperty(Image.prototype, "size", {
        get: function () {
            return this.nativeObject.xtr_size();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Image.prototype, "scale", {
        get: function () {
            return this.nativeObject.xtr_scale();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Image.prototype, "renderingMode", {
        get: function () {
            return this.nativeObject.xtr_renderingMode();
        },
        enumerable: true,
        configurable: true
    });
    Image.prototype.imageWithImageRenderingMode = function (renderingMode) {
        return this.nativeObject.xtr_imageWithImageRenderingMode(renderingMode);
    };
    Image.assetsPath = "assets/";
    return Image;
}());
exports.Image = Image;
var ContentMode;
(function (ContentMode) {
    ContentMode[ContentMode["ScaleToFill"] = 0] = "ScaleToFill";
    ContentMode[ContentMode["ScaleAspectFit"] = 1] = "ScaleAspectFit";
    ContentMode[ContentMode["ScaleAspectFill"] = 2] = "ScaleAspectFill";
})(ContentMode = exports.ContentMode || (exports.ContentMode = {}));
var ImageView = /** @class */ (function (_super) {
    __extends(ImageView, _super);
    function ImageView(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRImageView.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(ImageView.prototype, "image", {
        get: function () {
            return this._image;
        },
        set: function (value) {
            this._image = value;
            this.nativeObject.xtr_setImage(value);
        },
        enumerable: true,
        configurable: true
    });
    return ImageView;
}(View_1.View));
exports.ImageView = ImageView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRImageConstructor]") {
        return new Image(view);
    }
    if (view.constructor.toString() === "[object XTRImageViewConstructor]") {
        return new ImageView(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 250:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LayoutAttribute;
(function (LayoutAttribute) {
    LayoutAttribute[LayoutAttribute["Const"] = 0] = "Const";
    LayoutAttribute[LayoutAttribute["Left"] = 1] = "Left";
    LayoutAttribute[LayoutAttribute["Right"] = 2] = "Right";
    LayoutAttribute[LayoutAttribute["Top"] = 3] = "Top";
    LayoutAttribute[LayoutAttribute["Bottom"] = 4] = "Bottom";
    LayoutAttribute[LayoutAttribute["Width"] = 7] = "Width";
    LayoutAttribute[LayoutAttribute["Height"] = 8] = "Height";
    LayoutAttribute[LayoutAttribute["CenterX"] = 9] = "CenterX";
    LayoutAttribute[LayoutAttribute["CenterY"] = 10] = "CenterY";
})(LayoutAttribute = exports.LayoutAttribute || (exports.LayoutAttribute = {}));
var LayoutRelation;
(function (LayoutRelation) {
    LayoutRelation[LayoutRelation["Less"] = -1] = "Less";
    LayoutRelation[LayoutRelation["Equal"] = 0] = "Equal";
    LayoutRelation[LayoutRelation["Greater"] = 1] = "Greater";
})(LayoutRelation = exports.LayoutRelation || (exports.LayoutRelation = {}));
var LayoutConstraint = /** @class */ (function () {
    function LayoutConstraint(firstItem, firstAttr, relation, secondItem, secondAttr, constant, multiplier, nativeObject) {
        if (constant === void 0) { constant = 0; }
        if (multiplier === void 0) { multiplier = 1; }
        if (nativeObject !== undefined) {
            this.nativeObject = nativeObject;
            window.XTRObjCreater.store(this);
        }
        else {
            this.nativeObject = XTRLayoutConstraint.createFirstAttrRelationSecondItemSecondAttrConstantMultiplierScriptObject(firstItem, firstAttr, relation, secondItem, secondAttr, constant, multiplier, this);
            window.XTRObjCreater.store(this);
        }
    }
    Object.defineProperty(LayoutConstraint.prototype, "firstItem", {
        get: function () {
            return this.nativeObject.xtr_firstItem();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "firstAttr", {
        get: function () {
            return this.nativeObject.xtr_firstAttr();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "relation", {
        get: function () {
            return this.nativeObject.xtr_relation();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "secondItem", {
        get: function () {
            return this.nativeObject.xtr_secondItem();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "secondAttr", {
        get: function () {
            return this.nativeObject.xtr_secondAttr();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "constant", {
        get: function () {
            return this.nativeObject.xtr_constant();
        },
        set: function (value) {
            this.nativeObject.xtr_setConstant(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "multiplier", {
        get: function () {
            return this.nativeObject.xtr_multiplier();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutConstraint.prototype, "priority", {
        get: function () {
            return this.nativeObject.xtr_priority();
        },
        set: function (value) {
            this.nativeObject.xtr_setPriority(value);
        },
        enumerable: true,
        configurable: true
    });
    LayoutConstraint.constraintsWithVisualFormat = function (format, views) {
        return XTRLayoutConstraint.xtr_constraintsWithVisualFormatViews(format, views);
    };
    LayoutConstraint.LayoutAttribute = LayoutAttribute;
    LayoutConstraint.LayoutRelation = LayoutRelation;
    return LayoutConstraint;
}());
exports.LayoutConstraint = LayoutConstraint;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRLayoutConstraintConstructor]") {
        return new LayoutConstraint(undefined, undefined, undefined, undefined, undefined, undefined, undefined, view);
    }
    return undefined;
});


/***/ }),

/***/ 251:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var ScrollView_1 = __webpack_require__(119);
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var ListSelectionStyle;
(function (ListSelectionStyle) {
    ListSelectionStyle[ListSelectionStyle["None"] = 0] = "None";
    ListSelectionStyle[ListSelectionStyle["Gray"] = 1] = "Gray";
})(ListSelectionStyle = exports.ListSelectionStyle || (exports.ListSelectionStyle = {}));
var ListCell = /** @class */ (function (_super) {
    __extends(ListCell, _super);
    function ListCell(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRListCell.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(ListCell.prototype, "contentView", {
        get: function () {
            return this;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListCell.prototype, "selectionStyle", {
        get: function () {
            return this.nativeObject._selectionStyle;
        },
        set: function (value) {
            this.nativeObject.xtr_setSelectionStyle(value);
        },
        enumerable: true,
        configurable: true
    });
    ListCell.prototype.handleSelected = function () {
        this.onSelected && this.onSelected();
        this.didSelected();
    };
    ListCell.prototype.didSelected = function () { };
    ListCell.prototype.didRender = function () { };
    return ListCell;
}(View_1.View));
exports.ListCell = ListCell;
var ListView = /** @class */ (function (_super) {
    __extends(ListView, _super);
    function ListView(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        _this.registedClasses = {};
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
        }
        else {
            _this.nativeObject = XTRListView.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
        }
        return _this;
    }
    Object.defineProperty(ListView.prototype, "items", {
        get: function () {
            return this._items;
        },
        set: function (value) {
            this._items = value;
            this.nativeObject.xtr_setItems(value);
        },
        enumerable: true,
        configurable: true
    });
    ListView.prototype.register = function (clazz, reuseIdentifier) {
        this.registedClasses[reuseIdentifier] = clazz;
    };
    ListView.prototype.reloadData = function () {
        this.nativeObject.xtr_reloadData();
    };
    ListView.prototype.requestRowHeight = function (width, rowIndex) {
        if (this.items[rowIndex] !== undefined && typeof this.items[rowIndex].rowHeight === "function") {
            return this.items[rowIndex].rowHeight(width);
        }
        return 0.0;
    };
    ListView.prototype.requestRowCell = function (rowIndex) {
        if (this.items[rowIndex] !== undefined) {
            if (this.registedClasses[this.items[rowIndex].reuseIdentifier] !== undefined) {
                var clazz = this.registedClasses[this.items[rowIndex].reuseIdentifier];
                var cell = new clazz(undefined);
                cell.reuseIdentifier = this.items[rowIndex].reuseIdentifier || "Cell";
                return cell;
            }
        }
        return new ListCell(undefined);
    };
    ListView.prototype.handleRenderItem = function (rowIndex, cell) {
        cell.currentItem = this.items[rowIndex];
        this.renderItem && this.renderItem(cell, this.items[rowIndex]);
        cell.onRender && cell.onRender();
        cell.didRender();
    };
    return ListView;
}(ScrollView_1.ScrollView));
exports.ListView = ListView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRListViewConstructor]") {
        return new ListView(undefined, view);
    }
    if (view.constructor.toString() === "[object XTRListCellConstructor]") {
        return new ListCell(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 252:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Screen = /** @class */ (function () {
    function Screen(width, height, scale) {
        this.width = width;
        this.height = height;
        this.scale = scale;
    }
    Screen.prototype.bounds = function () {
        return { x: 0, y: 0, width: this.width, height: this.height };
    };
    Screen.withScale = function (value) {
        return value * Screen.mainScreen().scale;
    };
    Screen.outScale = function (value) {
        return value / Screen.mainScreen().scale;
    };
    Screen.mainScreen = function () {
        var bounds = XTRScreen.xtr_mainScreenBounds();
        return new Screen(bounds.width, bounds.height, XTRScreen.xtr_mainScreenScale());
    };
    return Screen;
}());
exports.Screen = Screen;


/***/ }),

/***/ 253:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var Window = /** @class */ (function (_super) {
    __extends(Window, _super);
    function Window(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRWindow.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(Window.prototype, "rootViewController", {
        get: function () {
            return this.nativeObject.xtr_rootViewController();
        },
        set: function (value) {
            this.nativeObject.xtr_setRootViewController(value);
            this.rootViewControllerRef = value;
        },
        enumerable: true,
        configurable: true
    });
    Window.prototype.makeKeyAndVisible = function () {
        this.nativeObject.xtr_makeKeyAndVisible();
    };
    Window.prototype.handleKeyboardShow = function (frame, duration) {
        this.rootViewController && this.rootViewController.keyboardWillShow(frame, duration);
    };
    Window.prototype.handleKeyboardHide = function (duration) {
        this.rootViewController && this.rootViewController.keyboardWillHide(duration);
    };
    Window.prototype.endEditing = function () {
        this.nativeObject.xtr_endEditing();
    };
    return Window;
}(View_1.View));
exports.Window = Window;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRWindowConstructor]") {
        return new Window(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 254:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var ViewController_1 = __webpack_require__(120);
var NavigationController = /** @class */ (function (_super) {
    __extends(NavigationController, _super);
    function NavigationController(rootViewController, nativeObject, isChild) {
        if (isChild === void 0) { isChild = false; }
        var _this = _super.call(this, nativeObject, true) || this;
        if (isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRNavigationController.create(_this);
            window.XTRObjCreater.store(_this);
            if (rootViewController) {
                _this.nativeObject.xtr_setViewControllersAnimated([rootViewController], false);
            }
        }
        return _this;
    }
    NavigationController.prototype.pushViewController = function (viewController, animated) {
        if (animated === void 0) { animated = true; }
        this.nativeObject.xtr_pushViewControllerAnimated(viewController, animated);
    };
    NavigationController.prototype.popViewController = function (animated) {
        if (animated === void 0) { animated = true; }
        return this.nativeObject.xtr_popViewController(animated);
    };
    NavigationController.prototype.popToViewController = function (viewController, animated) {
        if (animated === void 0) { animated = true; }
        return this.nativeObject.xtr_popToViewController(viewController, animated);
    };
    NavigationController.prototype.popToRootViewController = function (animated) {
        if (animated === void 0) { animated = true; }
        return this.nativeObject.xtr_popToRootViewController(animated);
    };
    return NavigationController;
}(ViewController_1.ViewController));
exports.NavigationController = NavigationController;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (target) {
    if (target.constructor.toString() === "[object XTRNavigationControllerConstructor]") {
        return new NavigationController(undefined, target);
    }
    return undefined;
});


/***/ }),

/***/ 255:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var TextField = /** @class */ (function (_super) {
    __extends(TextField, _super);
    function TextField(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        _this.shouldBeginEditing = undefined;
        _this.didBeginEditing = undefined;
        _this.shouldEndEditing = undefined;
        _this.didEndEditing = undefined;
        _this.shouldChange = undefined;
        _this.shouldClear = undefined;
        _this.shouldReturn = undefined;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRTextField.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(TextField.prototype, "text", {
        get: function () {
            return this.nativeObject.xtr_text();
        },
        set: function (value) {
            this.nativeObject.xtr_setText(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "font", {
        get: function () {
            return this.nativeObject.xtr_font();
        },
        set: function (value) {
            this.nativeObject.xtr_setFont(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "textColor", {
        get: function () {
            return this.nativeObject.xtr_textColor();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "textAlignment", {
        get: function () {
            return this.nativeObject.xtr_textAlignment();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextAlignment(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "placeholder", {
        get: function () {
            return this.nativeObject.xtr_placeholder();
        },
        set: function (value) {
            this.nativeObject.xtr_setPlaceholder(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "placeholderColor", {
        get: function () {
            return this.nativeObject.xtr_placeholderColor();
        },
        set: function (value) {
            this.nativeObject.xtr_setPlaceholderColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "clearsOnBeginEditing", {
        get: function () {
            return this.nativeObject.xtr_clearsOnBeginEditing();
        },
        set: function (value) {
            this.nativeObject.xtr_setClearsOnBeginEditing(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "editing", {
        get: function () {
            return this.nativeObject.xtr_editing();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "clearButtonMode", {
        get: function () {
            return this.nativeObject.xtr_clearButtonMode();
        },
        set: function (value) {
            this.nativeObject.xtr_setClearButtonMode(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "leftView", {
        get: function () {
            return this.nativeObject.xtr_leftView();
        },
        set: function (view) {
            this.nativeObject.xtr_setLeftView(view);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "leftViewMode", {
        get: function () {
            return this.nativeObject.xtr_leftViewMode();
        },
        set: function (value) {
            this.nativeObject.xtr_setLeftViewMode(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "rightView", {
        get: function () {
            return this.nativeObject.xtr_rightView();
        },
        set: function (view) {
            this.nativeObject.xtr_setRightView(view);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "rightViewMode", {
        get: function () {
            return this.nativeObject.xtr_rightViewMode();
        },
        set: function (value) {
            this.nativeObject.xtr_setRightViewMode(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "allowAutocapitalization", {
        get: function () {
            return this.nativeObject.xtr_allowAutocapitalization();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowAutocapitalization(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "allowAutocorrection", {
        get: function () {
            return this.nativeObject.xtr_allowAutocorrection();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowAutocorrection(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "allowSpellChecking", {
        get: function () {
            return this.nativeObject.xtr_allowSpellChecking();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowSpellChecking(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "keyboardType", {
        get: function () {
            return this.nativeObject.xtr_keyboardType();
        },
        set: function (value) {
            this.nativeObject.xtr_setKeyboardType(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "returnKeyType", {
        get: function () {
            return this.nativeObject.xtr_returnKeyType();
        },
        set: function (value) {
            this.nativeObject.xtr_setReturnKeyType(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "enablesReturnKeyAutomatically", {
        get: function () {
            return this.nativeObject.xtr_enablesReturnKeyAutomatically();
        },
        set: function (value) {
            this.nativeObject.xtr_setEnablesReturnKeyAutomatically(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextField.prototype, "secureTextEntry", {
        get: function () {
            return this.nativeObject.xtr_secureTextEntry;
        },
        set: function (value) {
            this.nativeObject.xtr_setSecureTextEntry(value);
        },
        enumerable: true,
        configurable: true
    });
    TextField.prototype.handleShouldBeginEditing = function () {
        if (this.shouldBeginEditing) {
            return this.shouldBeginEditing();
        }
        return true;
    };
    TextField.prototype.handleDidBeginEditing = function () {
        this.didBeginEditing && this.didBeginEditing();
    };
    TextField.prototype.handleShouldEndEditing = function () {
        if (this.shouldEndEditing) {
            return this.shouldEndEditing();
        }
        return true;
    };
    TextField.prototype.handleDidEndEditing = function () {
        this.didEndEditing && this.didEndEditing();
    };
    TextField.prototype.handleShouldChange = function (inRange, replacementString) {
        if (this.shouldChange) {
            return this.shouldChange(inRange, replacementString);
        }
        return true;
    };
    TextField.prototype.handleShouldClear = function () {
        if (this.shouldClear) {
            return this.shouldClear();
        }
        return true;
    };
    TextField.prototype.handleShouldReturn = function () {
        if (this.shouldReturn) {
            return this.shouldReturn();
        }
        return true;
    };
    TextField.prototype.focus = function () {
        this.nativeObject.xtr_focus();
    };
    TextField.prototype.blur = function () {
        if (!this.handleShouldEndEditing()) {
            return;
        }
        this.nativeObject.xtr_blur();
    };
    return TextField;
}(View_1.View));
exports.TextField = TextField;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRTextFieldConstructor]") {
        return new TextField(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 256:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
/// <reference path="xtr.d.ts" />
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var TextView = /** @class */ (function (_super) {
    __extends(TextView, _super);
    function TextView(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        _this.shouldBeginEditing = undefined;
        _this.didBeginEditing = undefined;
        _this.shouldEndEditing = undefined;
        _this.didEndEditing = undefined;
        _this.shouldChange = undefined;
        _this.shouldClear = undefined;
        _this.shouldReturn = undefined;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRTextView.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(TextView.prototype, "text", {
        get: function () {
            return this.nativeObject.xtr_text();
        },
        set: function (value) {
            this.nativeObject.xtr_setText(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "font", {
        get: function () {
            return this.nativeObject.xtr_font();
        },
        set: function (value) {
            this.nativeObject.xtr_setFont(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "textColor", {
        get: function () {
            return this.nativeObject.xtr_textColor();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextColor(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "textAlignment", {
        get: function () {
            return this.nativeObject.xtr_textAlignment();
        },
        set: function (value) {
            this.nativeObject.xtr_setTextAlignment(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "editing", {
        get: function () {
            return this.nativeObject.xtr_editing();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "allowAutocapitalization", {
        get: function () {
            return this.nativeObject.xtr_allowAutocapitalization();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowAutocapitalization(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "allowAutocorrection", {
        get: function () {
            return this.nativeObject.xtr_allowAutocorrection();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowAutocorrection(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "allowSpellChecking", {
        get: function () {
            return this.nativeObject.xtr_allowSpellChecking();
        },
        set: function (value) {
            this.nativeObject.xtr_setAllowSpellChecking(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "keyboardType", {
        get: function () {
            return this.nativeObject.xtr_keyboardType();
        },
        set: function (value) {
            this.nativeObject.xtr_setKeyboardType(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "returnKeyType", {
        get: function () {
            return this.nativeObject.xtr_returnKeyType();
        },
        set: function (value) {
            this.nativeObject.xtr_setReturnKeyType(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "enablesReturnKeyAutomatically", {
        get: function () {
            return this.nativeObject.xtr_enablesReturnKeyAutomatically();
        },
        set: function (value) {
            this.nativeObject.xtr_setEnablesReturnKeyAutomatically(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TextView.prototype, "secureTextEntry", {
        get: function () {
            return this.nativeObject.xtr_secureTextEntry;
        },
        set: function (value) {
            this.nativeObject.xtr_setSecureTextEntry(value);
        },
        enumerable: true,
        configurable: true
    });
    TextView.prototype.handleShouldBeginEditing = function () {
        if (this.shouldBeginEditing) {
            return this.shouldBeginEditing();
        }
        return true;
    };
    TextView.prototype.handleDidBeginEditing = function () {
        this.didBeginEditing && this.didBeginEditing();
    };
    TextView.prototype.handleShouldEndEditing = function () {
        if (this.shouldEndEditing) {
            return this.shouldEndEditing();
        }
        return true;
    };
    TextView.prototype.handleDidEndEditing = function () {
        this.didEndEditing && this.didEndEditing();
    };
    TextView.prototype.handleShouldChange = function (inRange, replacementString) {
        if (this.shouldChange) {
            return this.shouldChange(inRange, replacementString);
        }
        return true;
    };
    TextView.prototype.handleShouldClear = function () {
        if (this.shouldClear) {
            return this.shouldClear();
        }
        return true;
    };
    TextView.prototype.handleShouldReturn = function () {
        if (this.shouldReturn) {
            return this.shouldReturn();
        }
        return true;
    };
    TextView.prototype.focus = function () {
        this.nativeObject.xtr_focus();
    };
    TextView.prototype.blur = function () {
        if (!this.handleShouldEndEditing()) {
            return;
        }
        this.nativeObject.xtr_blur();
    };
    return TextView;
}(View_1.View));
exports.TextView = TextView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRTextViewConstructor]") {
        return new TextView(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 257:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var CanvasView = /** @class */ (function (_super) {
    __extends(CanvasView, _super);
    function CanvasView(rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRCanvasView.createScriptObject(rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    Object.defineProperty(CanvasView.prototype, "globalAlpha", {
        get: function () {
            return this.nativeObject.xtr_globalAlpha();
        },
        set: function (value) {
            this.nativeObject.xtr_setGlobalAlpha(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "fillStyle", {
        get: function () {
            return this.nativeObject.xtr_fillStyle();
        },
        set: function (value) {
            this.nativeObject.xtr_setFillStyle(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "strokeStyle", {
        get: function () {
            return this.nativeObject.xtr_strokeStyle();
        },
        set: function (value) {
            this.nativeObject.xtr_setStrokeStyle(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "lineCap", {
        get: function () {
            return this.nativeObject.xtr_lineCap();
        },
        set: function (value) {
            this.nativeObject.xtr_setLineCap(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "lineJoin", {
        get: function () {
            return this.nativeObject.xtr_lineJoin();
        },
        set: function (value) {
            this.nativeObject.xtr_setLineJoin(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "lineWidth", {
        get: function () {
            return this.nativeObject.xtr_lineWidth();
        },
        set: function (value) {
            this.nativeObject.xtr_setLineWidth(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CanvasView.prototype, "miterLimit", {
        get: function () {
            return this.nativeObject.xtr_miterLimit();
        },
        set: function (value) {
            this.nativeObject.xtr_setMiterLimit(value);
        },
        enumerable: true,
        configurable: true
    });
    CanvasView.prototype.rect = function (x, y, width, height) {
        this.nativeObject.xtr_rect({ x: x, y: y, width: width, height: height });
    };
    CanvasView.prototype.fillRect = function (x, y, width, height) {
        this.nativeObject.xtr_fillRect({ x: x, y: y, width: width, height: height });
    };
    CanvasView.prototype.strokeRect = function (x, y, width, height) {
        this.nativeObject.xtr_strokeRect({ x: x, y: y, width: width, height: height });
    };
    CanvasView.prototype.fill = function () {
        this.nativeObject.xtr_fill();
    };
    CanvasView.prototype.stroke = function () {
        this.nativeObject.xtr_stroke();
    };
    CanvasView.prototype.beginPath = function () {
        this.nativeObject.xtr_beginPath();
    };
    CanvasView.prototype.moveTo = function (x, y) {
        this.nativeObject.xtr_moveTo({ x: x, y: y });
    };
    CanvasView.prototype.closePath = function () {
        this.nativeObject.xtr_closePath();
    };
    CanvasView.prototype.lineTo = function (x, y) {
        this.nativeObject.xtr_lineTo({ x: x, y: y });
    };
    CanvasView.prototype.quadraticCurveTo = function (cpx, cpy, x, y) {
        this.nativeObject.xtr_quadraticCurveToXyPoint({ x: cpx, y: cpy }, { x: x, y: y });
    };
    CanvasView.prototype.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {
        this.nativeObject.xtr_bezierCurveToCp2PointXyPoint({ x: cp1x, y: cp1y }, { x: cp2x, y: cp2y }, { x: x, y: y });
    };
    CanvasView.prototype.arc = function (x, y, r, sAngle, eAngle, counterclockwise) {
        if (counterclockwise === void 0) { counterclockwise = false; }
        this.nativeObject.xtr_arcRSAngleEAngleCounterclockwise({ x: x, y: y }, r, sAngle, eAngle, counterclockwise);
    };
    CanvasView.prototype.postScale = function (x, y) {
        this.nativeObject.xtr_postScale({ x: x, y: y });
    };
    CanvasView.prototype.postRotate = function (angle) {
        this.nativeObject.xtr_postRotate(angle);
    };
    CanvasView.prototype.postTranslate = function (x, y) {
        this.nativeObject.xtr_postTranslate({ x: x, y: y });
    };
    CanvasView.prototype.postTransform = function (a, b, c, d, tx, ty) {
        this.nativeObject.xtr_postTransform({ a: a, b: b, c: c, d: d, tx: tx, ty: ty });
    };
    CanvasView.prototype.setTransform = function (a, b, c, d, tx, ty) {
        this.nativeObject.xtr_setCanvasTransform({ a: a, b: b, c: c, d: d, tx: tx, ty: ty });
    };
    CanvasView.prototype.save = function () {
        this.nativeObject.xtr_save();
    };
    CanvasView.prototype.restore = function () {
        this.nativeObject.xtr_restore();
    };
    CanvasView.prototype.isPointInPath = function (x, y) {
        return this.nativeObject.xtr_isPointInPath({ x: x, y: y });
    };
    CanvasView.prototype.clear = function () {
        this.nativeObject.xtr_clear();
    };
    return CanvasView;
}(View_1.View));
exports.CanvasView = CanvasView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRCanvasViewConstructor]") {
        return new CanvasView(undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 258:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(11);
var Rect_1 = __webpack_require__(0);
var CustomView = /** @class */ (function (_super) {
    __extends(CustomView, _super);
    function CustomView(className, rect, nativeObject, _isChild) {
        if (_isChild === void 0) { _isChild = false; }
        var _this = _super.call(this, undefined, undefined, true) || this;
        _this.onMessage = undefined;
        if (_isChild) {
            return _this;
        }
        if (nativeObject) {
            _this.nativeObject = nativeObject;
            window.XTRObjCreater.store(_this);
        }
        else {
            _this.nativeObject = XTRCustomView.createFrameScriptObject(className, rect || Rect_1.RectZero, _this);
            window.XTRObjCreater.store(_this);
            setImmediate(function () { _this.init(); });
        }
        return _this;
    }
    CustomView.prototype.emitMessage = function (message) {
        return this.nativeObject.handleMessage(message);
    };
    CustomView.prototype.handleMessage = function (message) {
        if (this.onMessage) {
            return this.onMessage(message);
        }
        return undefined;
    };
    return CustomView;
}(View_1.View));
exports.CustomView = CustomView;
if (window.XTRObjClasses === undefined) {
    window.XTRObjClasses = [];
}
window.XTRObjClasses.push(function (view) {
    if (view.constructor.toString() === "[object XTRCustomViewConstructor]") {
        return new CustomView("", undefined, view);
    }
    return undefined;
});

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5).setImmediate))

/***/ }),

/***/ 259:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Device = /** @class */ (function () {
    function Device(nativeObject) {
        this.nativeObject = nativeObject;
    }
    Object.defineProperty(Device, "current", {
        get: function () {
            return new Device(XTRDevice.xtr_current());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "name", {
        get: function () {
            return this.nativeObject.xtr_name();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "systemName", {
        get: function () {
            return this.nativeObject.xtr_systemName();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "systemVersion", {
        get: function () {
            return this.nativeObject.xtr_systemVersion();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "xtRuntimeVersion", {
        get: function () {
            return this.nativeObject.xtr_xtRuntimeVersion();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "model", {
        get: function () {
            return this.nativeObject.xtr_model();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Device.prototype, "orientation", {
        get: function () {
            return this.nativeObject.xtr_orientation();
        },
        enumerable: true,
        configurable: true
    });
    Device.prototype.isiOS = function () { return true; };
    Device.prototype.isAndroid = function () { return false; };
    Device.prototype.isWeb = function () { return false; };
    return Device;
}());
exports.Device = Device;


/***/ }),

/***/ 27:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(4);
var ImageRenderingMode;
(function (ImageRenderingMode) {
    ImageRenderingMode[ImageRenderingMode["Automatic"] = 0] = "Automatic";
    ImageRenderingMode[ImageRenderingMode["Original"] = 1] = "Original";
    ImageRenderingMode[ImageRenderingMode["Template"] = 2] = "Template";
})(ImageRenderingMode = exports.ImageRenderingMode || (exports.ImageRenderingMode = {}));
var Image = /** @class */ (function () {
    function Image() {
        this.renderingMode = ImageRenderingMode.Original;
    }
    Image.fromURL = function (url, success, failure) { };
    Image.fromAssets = function (named, success, failure) { };
    Image.fromAssetsWithScales = function (named, scales, success, failure) { };
    Image.fromBase64 = function (value, scale, success) { };
    Image.prototype.imageWithImageRenderingMode = function (renderingMode) {
        throw "TODO";
    };
    Image.assetsPath = "./assets/";
    return Image;
}());
exports.Image = Image;
var ContentMode;
(function (ContentMode) {
    ContentMode[ContentMode["ScaleToFill"] = 0] = "ScaleToFill";
    ContentMode[ContentMode["ScaleAspectFit"] = 1] = "ScaleAspectFit";
    ContentMode[ContentMode["ScaleAspectFill"] = 2] = "ScaleAspectFill";
})(ContentMode = exports.ContentMode || (exports.ContentMode = {}));
var ImageView = /** @class */ (function (_super) {
    __extends(ImageView, _super);
    function ImageView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.contentMode = ContentMode.ScaleToFill;
        return _this;
    }
    return ImageView;
}(View_1.View));
exports.ImageView = ImageView;


/***/ }),

/***/ 34:
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(18), __webpack_require__(22)))

/***/ }),

/***/ 37:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(4);
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.isDirectionalLockEnabled = true;
        _this.bounces = true;
        _this.isScrollEnabled = true;
        _this.showsHorizontalScrollIndicator = true;
        _this.showsVerticalScrollIndicator = true;
        _this.alwaysBounceVertical = false;
        _this.alwaysBounceHorizontal = false;
        return _this;
    }
    return ScrollView;
}(View_1.View));
exports.ScrollView = ScrollView;


/***/ }),

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InteractionState;
(function (InteractionState) {
    InteractionState[InteractionState["Began"] = 0] = "Began";
    InteractionState[InteractionState["Changed"] = 1] = "Changed";
    InteractionState[InteractionState["Ended"] = 2] = "Ended";
    InteractionState[InteractionState["Cancelled"] = 3] = "Cancelled";
})(InteractionState = exports.InteractionState || (exports.InteractionState = {}));
var SwipeDirection;
(function (SwipeDirection) {
    SwipeDirection[SwipeDirection["ToLeft"] = 0] = "ToLeft";
    SwipeDirection[SwipeDirection["ToRight"] = 1] = "ToRight";
    SwipeDirection[SwipeDirection["ToTop"] = 2] = "ToTop";
    SwipeDirection[SwipeDirection["ToBottom"] = 3] = "ToBottom";
})(SwipeDirection = exports.SwipeDirection || (exports.SwipeDirection = {}));
var View = /** @class */ (function () {
    function View(rect) {
    }
    View.prototype.init = function () { };
    View.prototype.tintColorDidChange = function () { };
    View.prototype.removeFromSuperview = function () { };
    View.prototype.insertSubviewAtIndex = function (subview, atIndex) { };
    View.prototype.exchangeSubviewAtIndex = function (index1, index2) { };
    View.prototype.addSubview = function (subview) { };
    View.prototype.insertSubviewBelow = function (subview, siblingSubview) { };
    View.prototype.insertSubviewAbove = function (subview, siblingSubview) { };
    View.prototype.bringSubviewToFront = function (subview) { };
    View.prototype.sendSubviewToBack = function (subview) { };
    View.prototype.didAddSubview = function (subview) { };
    View.prototype.willRemoveSubview = function (subview) { };
    View.prototype.willMoveToSuperview = function (newSuperview) { };
    View.prototype.didMoveToSuperview = function () { };
    View.prototype.willMoveToWindow = function (newWindow) { };
    View.prototype.didMoveToWindow = function () { };
    View.prototype.isDescendantOfView = function (view) { return false; };
    View.prototype.viewWithTag = function (tag) { return undefined; };
    View.prototype.setNeedsLayout = function () { };
    View.prototype.layoutIfNeeded = function () { };
    View.prototype.layoutSubviews = function () { };
    View.prototype.setNeedsDisplay = function () { };
    View.prototype.addConstraint = function (constraint) { };
    View.prototype.addConstraints = function (constraints) { };
    View.prototype.removeConstraint = function (constraint) { };
    View.prototype.removeAllConstraints = function () { };
    // Mark: View Animation
    View.animationWithDuration = function (duration, animations, completion) { };
    View.animationWithTensionAndFriction = function (tension, friction, animations, completion) { };
    View.animationWithBouncinessAndSpeed = function (bounciness, speed, animations, completion) { };
    View.animationWithDurationDampingVelocity = function (duration, damping, velocity, animations, completion) { }; // iOS Only
    // Mark: View Interactive
    View.InteractionState = InteractionState;
    View.SwipeDirection = SwipeDirection;
    return View;
}());
exports.View = View;


/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(window, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(34);
exports.setImmediate = setImmediate;
exports.clearImmediate = clearImmediate;


/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Color = /** @class */ (function () {
    function Color(r, g, b, a) {
        this.r = Math.min(1.0, Math.max(0.0, r));
        this.g = Math.min(1.0, Math.max(0.0, g));
        ;
        this.b = Math.min(1.0, Math.max(0.0, b));
        ;
        this.a = a == undefined ? 1.0 : Math.min(1.0, Math.max(0.0, a));
        ;
    }
    Color.prototype.rgbHexNumber = function () {
        var r = Math.ceil(this.r * 255).toString(16);
        var g = Math.ceil(this.g * 255).toString(16);
        var b = Math.ceil(this.b * 255).toString(16);
        return parseInt("0x" + (r.length < 2 ? "0" + r : r) + (g.length < 2 ? "0" + g : g) + (b.length < 2 ? "0" + b : b));
    };
    Color.prototype.rgbHexString = function () {
        var r = Math.ceil(this.r * 255).toString(16);
        var g = Math.ceil(this.g * 255).toString(16);
        var b = Math.ceil(this.b * 255).toString(16);
        return "#" + (r.length < 2 ? "0" + r : r) + (g.length < 2 ? "0" + g : g) + (b.length < 2 ? "0" + b : b);
    };
    Color.prototype.equals = function (toColor) {
        if (toColor instanceof Color) {
            return this.r === toColor.r && this.g === toColor.g && this.b === toColor.b && this.a === toColor.a;
        }
        return false;
    };
    Color.colorWithWhite = function (white, alpha) {
        return new Color(white, white, white, alpha);
    };
    Color.whiteColor = new Color(1.0, 1.0, 1.0);
    Color.blackColor = new Color(0.0, 0.0, 0.0);
    Color.clearColor = new Color(0.0, 0.0, 0.0, 0.0);
    Color.redColor = new Color(1.0, 0.0, 0.0);
    Color.yellowColor = new Color(1.0, 1.0, 0.0);
    Color.greenColor = new Color(0.0, 1.0, 0.0);
    Color.blueColor = new Color(0.0, 0.0, 1.0);
    return Color;
}());
exports.Color = Color;


/***/ }),

/***/ 61:
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var View_1 = __webpack_require__(4);
var Color_1 = __webpack_require__(6);
var Label_1 = __webpack_require__(14);
var TextFieldViewMode;
(function (TextFieldViewMode) {
    TextFieldViewMode[TextFieldViewMode["Never"] = 0] = "Never";
    TextFieldViewMode[TextFieldViewMode["WhileEditing"] = 1] = "WhileEditing";
    TextFieldViewMode[TextFieldViewMode["UnlessEditing"] = 2] = "UnlessEditing";
    TextFieldViewMode[TextFieldViewMode["Always"] = 3] = "Always";
})(TextFieldViewMode = exports.TextFieldViewMode || (exports.TextFieldViewMode = {}));
var KeyboardType;
(function (KeyboardType) {
    KeyboardType[KeyboardType["Default"] = 0] = "Default";
    KeyboardType[KeyboardType["ASCIICapable"] = 1] = "ASCIICapable";
    KeyboardType[KeyboardType["NumbersAndPunctuation"] = 2] = "NumbersAndPunctuation";
})(KeyboardType = exports.KeyboardType || (exports.KeyboardType = {}));
var ReturnKeyType;
(function (ReturnKeyType) {
    ReturnKeyType[ReturnKeyType["Default"] = 0] = "Default";
    ReturnKeyType[ReturnKeyType["Go"] = 1] = "Go";
    ReturnKeyType[ReturnKeyType["Next"] = 4] = "Next";
    ReturnKeyType[ReturnKeyType["Search"] = 6] = "Search";
    ReturnKeyType[ReturnKeyType["Send"] = 7] = "Send";
    ReturnKeyType[ReturnKeyType["Done"] = 9] = "Done";
})(ReturnKeyType = exports.ReturnKeyType || (exports.ReturnKeyType = {}));
var TextField = /** @class */ (function (_super) {
    __extends(TextField, _super);
    function TextField() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.textColor = new Color_1.Color(0, 0, 0);
        _this.textAlignment = Label_1.TextAlignment.Left;
        _this.placeholderColor = Color_1.Color.colorWithWhite(0.7, 1.0);
        _this.clearsOnBeginEditing = false;
        _this.editing = false;
        _this.clearButtonMode = TextFieldViewMode.Never;
        _this.leftViewMode = TextFieldViewMode.Never;
        _this.rightViewMode = TextFieldViewMode.Never;
        // TextInput
        _this.allowAutocapitalization = true;
        _this.allowAutocorrection = true;
        _this.allowSpellChecking = true;
        _this.keyboardType = KeyboardType.Default;
        _this.returnKeyType = ReturnKeyType.Default;
        _this.enablesReturnKeyAutomatically = false;
        _this.secureTextEntry = false;
        // TextField Delegate
        _this.shouldBeginEditing = undefined;
        _this.didBeginEditing = undefined;
        _this.shouldEndEditing = undefined;
        _this.didEndEditing = undefined;
        _this.shouldChange = undefined;
        _this.shouldClear = undefined;
        _this.shouldReturn = undefined;
        return _this;
    }
    // methods
    TextField.prototype.focus = function () { };
    TextField.prototype.blur = function () { };
    return TextField;
}(View_1.View));
exports.TextField = TextField;


/***/ })

/******/ });
//# sourceMappingURL=sample.ios.min.js.map